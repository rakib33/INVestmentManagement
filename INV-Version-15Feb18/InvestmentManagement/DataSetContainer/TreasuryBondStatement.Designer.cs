//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace InvestmentManagement.DataSetContainer {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TreasuryBondStatement")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TreasuryBondStatement : global::System.Data.DataSet {
        
        private BONDDataTable tableBOND;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TreasuryBondStatement() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TreasuryBondStatement(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BOND"] != null)) {
                    base.Tables.Add(new BONDDataTable(ds.Tables["BOND"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BONDDataTable BOND {
            get {
                return this.tableBOND;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            TreasuryBondStatement cln = ((TreasuryBondStatement)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BOND"] != null)) {
                    base.Tables.Add(new BONDDataTable(ds.Tables["BOND"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBOND = ((BONDDataTable)(base.Tables["BOND"]));
            if ((initTable == true)) {
                if ((this.tableBOND != null)) {
                    this.tableBOND.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "TreasuryBondStatement";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TreasuryBondStatement.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBOND = new BONDDataTable();
            base.Tables.Add(this.tableBOND);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBOND() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TreasuryBondStatement ds = new TreasuryBondStatement();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BONDRowChangeEventHandler(object sender, BONDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BONDDataTable : global::System.Data.TypedTableBase<BONDRow> {
            
            private global::System.Data.DataColumn columnREFERENCE;
            
            private global::System.Data.DataColumn columnFINANCIALINSTITUTION_REFERENCE;
            
            private global::System.Data.DataColumn columnCREATEDDATE;
            
            private global::System.Data.DataColumn columnCREATEDBY;
            
            private global::System.Data.DataColumn columnLASTUPDATED;
            
            private global::System.Data.DataColumn columnLASTUPDATEDBY;
            
            private global::System.Data.DataColumn columnBONDID;
            
            private global::System.Data.DataColumn columnBONDTYPE;
            
            private global::System.Data.DataColumn columnSEQUENCENUMBER;
            
            private global::System.Data.DataColumn columnFACEVALUE;
            
            private global::System.Data.DataColumn columnCHEQUEDATE;
            
            private global::System.Data.DataColumn columnCHEQUEREFERENCE;
            
            private global::System.Data.DataColumn columnCHEQUEAMOUNT;
            
            private global::System.Data.DataColumn columnCHEQUECLEARINGCHARGE;
            
            private global::System.Data.DataColumn columnBONDISSUEDATE;
            
            private global::System.Data.DataColumn columnTENURE;
            
            private global::System.Data.DataColumn columnTENURETERM;
            
            private global::System.Data.DataColumn columnTERMSINDAYS;
            
            private global::System.Data.DataColumn columnINTERESTPAYMENTPERIOD;
            
            private global::System.Data.DataColumn columnMATURITYDATE;
            
            private global::System.Data.DataColumn columnAUCTION;
            
            private global::System.Data.DataColumn columnOFFERRATE;
            
            private global::System.Data.DataColumn columnCOUPONRATE;
            
            private global::System.Data.DataColumn columnBUYINGPRICE;
            
            private global::System.Data.DataColumn columnCOSTPRICE;
            
            private global::System.Data.DataColumn columnPREMIUMPAID;
            
            private global::System.Data.DataColumn columnTAXRATE;
            
            private global::System.Data.DataColumn columnDISCOUNT;
            
            private global::System.Data.DataColumn columnCOMMISSION;
            
            private global::System.Data.DataColumn columnHOLDINGINTERESTPAID;
            
            private global::System.Data.DataColumn columnTOTALPURCHASEAMOUNT;
            
            private global::System.Data.DataColumn columnTOTALCOMMISSIONGAIN;
            
            private global::System.Data.DataColumn columnINTERESTMODE;
            
            private global::System.Data.DataColumn columnGROSSINTEREST;
            
            private global::System.Data.DataColumn columnSOURCETAX;
            
            private global::System.Data.DataColumn columnEXCISEDUTY;
            
            private global::System.Data.DataColumn columnOTHERCHARGE;
            
            private global::System.Data.DataColumn columnCOMPOUNDINTERESTTYPE;
            
            private global::System.Data.DataColumn columnCOMPOUNDINTERESTINTERVAL;
            
            private global::System.Data.DataColumn columnANNUALDAYS;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnACCEPTEDBY;
            
            private global::System.Data.DataColumn columnACCEPTEDDATE;
            
            private global::System.Data.DataColumn columnREJECTEDBY;
            
            private global::System.Data.DataColumn columnREJECTEDDATE;
            
            private global::System.Data.DataColumn columnHOLDINGPERIOD;
            
            private global::System.Data.DataColumn columnNETINTEREST;
            
            private global::System.Data.DataColumn columnOPENINGDATE;
            
            private global::System.Data.DataColumn columnREMARKS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BONDDataTable() {
                this.TableName = "BOND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BONDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BONDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REFERENCEColumn {
                get {
                    return this.columnREFERENCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINANCIALINSTITUTION_REFERENCEColumn {
                get {
                    return this.columnFINANCIALINSTITUTION_REFERENCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATEDDATEColumn {
                get {
                    return this.columnCREATEDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATEDBYColumn {
                get {
                    return this.columnCREATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTUPDATEDColumn {
                get {
                    return this.columnLASTUPDATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTUPDATEDBYColumn {
                get {
                    return this.columnLASTUPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BONDIDColumn {
                get {
                    return this.columnBONDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BONDTYPEColumn {
                get {
                    return this.columnBONDTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQUENCENUMBERColumn {
                get {
                    return this.columnSEQUENCENUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FACEVALUEColumn {
                get {
                    return this.columnFACEVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHEQUEDATEColumn {
                get {
                    return this.columnCHEQUEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHEQUEREFERENCEColumn {
                get {
                    return this.columnCHEQUEREFERENCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHEQUEAMOUNTColumn {
                get {
                    return this.columnCHEQUEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHEQUECLEARINGCHARGEColumn {
                get {
                    return this.columnCHEQUECLEARINGCHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BONDISSUEDATEColumn {
                get {
                    return this.columnBONDISSUEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TENUREColumn {
                get {
                    return this.columnTENURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TENURETERMColumn {
                get {
                    return this.columnTENURETERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TERMSINDAYSColumn {
                get {
                    return this.columnTERMSINDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERESTPAYMENTPERIODColumn {
                get {
                    return this.columnINTERESTPAYMENTPERIOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MATURITYDATEColumn {
                get {
                    return this.columnMATURITYDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUCTIONColumn {
                get {
                    return this.columnAUCTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OFFERRATEColumn {
                get {
                    return this.columnOFFERRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COUPONRATEColumn {
                get {
                    return this.columnCOUPONRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUYINGPRICEColumn {
                get {
                    return this.columnBUYINGPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COSTPRICEColumn {
                get {
                    return this.columnCOSTPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PREMIUMPAIDColumn {
                get {
                    return this.columnPREMIUMPAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAXRATEColumn {
                get {
                    return this.columnTAXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DISCOUNTColumn {
                get {
                    return this.columnDISCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMMISSIONColumn {
                get {
                    return this.columnCOMMISSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HOLDINGINTERESTPAIDColumn {
                get {
                    return this.columnHOLDINGINTERESTPAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTALPURCHASEAMOUNTColumn {
                get {
                    return this.columnTOTALPURCHASEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTALCOMMISSIONGAINColumn {
                get {
                    return this.columnTOTALCOMMISSIONGAIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERESTMODEColumn {
                get {
                    return this.columnINTERESTMODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROSSINTERESTColumn {
                get {
                    return this.columnGROSSINTEREST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOURCETAXColumn {
                get {
                    return this.columnSOURCETAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXCISEDUTYColumn {
                get {
                    return this.columnEXCISEDUTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTHERCHARGEColumn {
                get {
                    return this.columnOTHERCHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPOUNDINTERESTTYPEColumn {
                get {
                    return this.columnCOMPOUNDINTERESTTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPOUNDINTERESTINTERVALColumn {
                get {
                    return this.columnCOMPOUNDINTERESTINTERVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANNUALDAYSColumn {
                get {
                    return this.columnANNUALDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCEPTEDBYColumn {
                get {
                    return this.columnACCEPTEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCEPTEDDATEColumn {
                get {
                    return this.columnACCEPTEDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REJECTEDBYColumn {
                get {
                    return this.columnREJECTEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REJECTEDDATEColumn {
                get {
                    return this.columnREJECTEDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HOLDINGPERIODColumn {
                get {
                    return this.columnHOLDINGPERIOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NETINTERESTColumn {
                get {
                    return this.columnNETINTEREST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPENINGDATEColumn {
                get {
                    return this.columnOPENINGDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKSColumn {
                get {
                    return this.columnREMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BONDRow this[int index] {
                get {
                    return ((BONDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BONDRowChangeEventHandler BONDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BONDRowChangeEventHandler BONDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BONDRowChangeEventHandler BONDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BONDRowChangeEventHandler BONDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBONDRow(BONDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BONDRow AddBONDRow(
                        string REFERENCE, 
                        string FINANCIALINSTITUTION_REFERENCE, 
                        System.DateTime CREATEDDATE, 
                        string CREATEDBY, 
                        System.DateTime LASTUPDATED, 
                        string LASTUPDATEDBY, 
                        string BONDID, 
                        string BONDTYPE, 
                        string SEQUENCENUMBER, 
                        decimal FACEVALUE, 
                        System.DateTime CHEQUEDATE, 
                        string CHEQUEREFERENCE, 
                        decimal CHEQUEAMOUNT, 
                        decimal CHEQUECLEARINGCHARGE, 
                        System.DateTime BONDISSUEDATE, 
                        decimal TENURE, 
                        string TENURETERM, 
                        decimal TERMSINDAYS, 
                        string INTERESTPAYMENTPERIOD, 
                        System.DateTime MATURITYDATE, 
                        decimal AUCTION, 
                        decimal OFFERRATE, 
                        decimal COUPONRATE, 
                        decimal BUYINGPRICE, 
                        decimal COSTPRICE, 
                        decimal PREMIUMPAID, 
                        decimal TAXRATE, 
                        decimal DISCOUNT, 
                        decimal COMMISSION, 
                        decimal HOLDINGINTERESTPAID, 
                        decimal TOTALPURCHASEAMOUNT, 
                        decimal TOTALCOMMISSIONGAIN, 
                        string INTERESTMODE, 
                        decimal GROSSINTEREST, 
                        decimal SOURCETAX, 
                        decimal EXCISEDUTY, 
                        decimal OTHERCHARGE, 
                        string COMPOUNDINTERESTTYPE, 
                        string COMPOUNDINTERESTINTERVAL, 
                        decimal ANNUALDAYS, 
                        string STATUS, 
                        string ACCEPTEDBY, 
                        System.DateTime ACCEPTEDDATE, 
                        string REJECTEDBY, 
                        System.DateTime REJECTEDDATE, 
                        decimal HOLDINGPERIOD, 
                        decimal NETINTEREST, 
                        System.DateTime OPENINGDATE, 
                        string REMARKS) {
                BONDRow rowBONDRow = ((BONDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REFERENCE,
                        FINANCIALINSTITUTION_REFERENCE,
                        CREATEDDATE,
                        CREATEDBY,
                        LASTUPDATED,
                        LASTUPDATEDBY,
                        BONDID,
                        BONDTYPE,
                        SEQUENCENUMBER,
                        FACEVALUE,
                        CHEQUEDATE,
                        CHEQUEREFERENCE,
                        CHEQUEAMOUNT,
                        CHEQUECLEARINGCHARGE,
                        BONDISSUEDATE,
                        TENURE,
                        TENURETERM,
                        TERMSINDAYS,
                        INTERESTPAYMENTPERIOD,
                        MATURITYDATE,
                        AUCTION,
                        OFFERRATE,
                        COUPONRATE,
                        BUYINGPRICE,
                        COSTPRICE,
                        PREMIUMPAID,
                        TAXRATE,
                        DISCOUNT,
                        COMMISSION,
                        HOLDINGINTERESTPAID,
                        TOTALPURCHASEAMOUNT,
                        TOTALCOMMISSIONGAIN,
                        INTERESTMODE,
                        GROSSINTEREST,
                        SOURCETAX,
                        EXCISEDUTY,
                        OTHERCHARGE,
                        COMPOUNDINTERESTTYPE,
                        COMPOUNDINTERESTINTERVAL,
                        ANNUALDAYS,
                        STATUS,
                        ACCEPTEDBY,
                        ACCEPTEDDATE,
                        REJECTEDBY,
                        REJECTEDDATE,
                        HOLDINGPERIOD,
                        NETINTEREST,
                        OPENINGDATE,
                        REMARKS};
                rowBONDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBONDRow);
                return rowBONDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BONDRow FindByREFERENCE(string REFERENCE) {
                return ((BONDRow)(this.Rows.Find(new object[] {
                            REFERENCE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BONDDataTable cln = ((BONDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BONDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnREFERENCE = base.Columns["REFERENCE"];
                this.columnFINANCIALINSTITUTION_REFERENCE = base.Columns["FINANCIALINSTITUTION_REFERENCE"];
                this.columnCREATEDDATE = base.Columns["CREATEDDATE"];
                this.columnCREATEDBY = base.Columns["CREATEDBY"];
                this.columnLASTUPDATED = base.Columns["LASTUPDATED"];
                this.columnLASTUPDATEDBY = base.Columns["LASTUPDATEDBY"];
                this.columnBONDID = base.Columns["BONDID"];
                this.columnBONDTYPE = base.Columns["BONDTYPE"];
                this.columnSEQUENCENUMBER = base.Columns["SEQUENCENUMBER"];
                this.columnFACEVALUE = base.Columns["FACEVALUE"];
                this.columnCHEQUEDATE = base.Columns["CHEQUEDATE"];
                this.columnCHEQUEREFERENCE = base.Columns["CHEQUEREFERENCE"];
                this.columnCHEQUEAMOUNT = base.Columns["CHEQUEAMOUNT"];
                this.columnCHEQUECLEARINGCHARGE = base.Columns["CHEQUECLEARINGCHARGE"];
                this.columnBONDISSUEDATE = base.Columns["BONDISSUEDATE"];
                this.columnTENURE = base.Columns["TENURE"];
                this.columnTENURETERM = base.Columns["TENURETERM"];
                this.columnTERMSINDAYS = base.Columns["TERMSINDAYS"];
                this.columnINTERESTPAYMENTPERIOD = base.Columns["INTERESTPAYMENTPERIOD"];
                this.columnMATURITYDATE = base.Columns["MATURITYDATE"];
                this.columnAUCTION = base.Columns["AUCTION"];
                this.columnOFFERRATE = base.Columns["OFFERRATE"];
                this.columnCOUPONRATE = base.Columns["COUPONRATE"];
                this.columnBUYINGPRICE = base.Columns["BUYINGPRICE"];
                this.columnCOSTPRICE = base.Columns["COSTPRICE"];
                this.columnPREMIUMPAID = base.Columns["PREMIUMPAID"];
                this.columnTAXRATE = base.Columns["TAXRATE"];
                this.columnDISCOUNT = base.Columns["DISCOUNT"];
                this.columnCOMMISSION = base.Columns["COMMISSION"];
                this.columnHOLDINGINTERESTPAID = base.Columns["HOLDINGINTERESTPAID"];
                this.columnTOTALPURCHASEAMOUNT = base.Columns["TOTALPURCHASEAMOUNT"];
                this.columnTOTALCOMMISSIONGAIN = base.Columns["TOTALCOMMISSIONGAIN"];
                this.columnINTERESTMODE = base.Columns["INTERESTMODE"];
                this.columnGROSSINTEREST = base.Columns["GROSSINTEREST"];
                this.columnSOURCETAX = base.Columns["SOURCETAX"];
                this.columnEXCISEDUTY = base.Columns["EXCISEDUTY"];
                this.columnOTHERCHARGE = base.Columns["OTHERCHARGE"];
                this.columnCOMPOUNDINTERESTTYPE = base.Columns["COMPOUNDINTERESTTYPE"];
                this.columnCOMPOUNDINTERESTINTERVAL = base.Columns["COMPOUNDINTERESTINTERVAL"];
                this.columnANNUALDAYS = base.Columns["ANNUALDAYS"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnACCEPTEDBY = base.Columns["ACCEPTEDBY"];
                this.columnACCEPTEDDATE = base.Columns["ACCEPTEDDATE"];
                this.columnREJECTEDBY = base.Columns["REJECTEDBY"];
                this.columnREJECTEDDATE = base.Columns["REJECTEDDATE"];
                this.columnHOLDINGPERIOD = base.Columns["HOLDINGPERIOD"];
                this.columnNETINTEREST = base.Columns["NETINTEREST"];
                this.columnOPENINGDATE = base.Columns["OPENINGDATE"];
                this.columnREMARKS = base.Columns["REMARKS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnREFERENCE = new global::System.Data.DataColumn("REFERENCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE);
                this.columnFINANCIALINSTITUTION_REFERENCE = new global::System.Data.DataColumn("FINANCIALINSTITUTION_REFERENCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINANCIALINSTITUTION_REFERENCE);
                this.columnCREATEDDATE = new global::System.Data.DataColumn("CREATEDDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDDATE);
                this.columnCREATEDBY = new global::System.Data.DataColumn("CREATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDBY);
                this.columnLASTUPDATED = new global::System.Data.DataColumn("LASTUPDATED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTUPDATED);
                this.columnLASTUPDATEDBY = new global::System.Data.DataColumn("LASTUPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTUPDATEDBY);
                this.columnBONDID = new global::System.Data.DataColumn("BONDID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBONDID);
                this.columnBONDTYPE = new global::System.Data.DataColumn("BONDTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBONDTYPE);
                this.columnSEQUENCENUMBER = new global::System.Data.DataColumn("SEQUENCENUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQUENCENUMBER);
                this.columnFACEVALUE = new global::System.Data.DataColumn("FACEVALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACEVALUE);
                this.columnCHEQUEDATE = new global::System.Data.DataColumn("CHEQUEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEQUEDATE);
                this.columnCHEQUEREFERENCE = new global::System.Data.DataColumn("CHEQUEREFERENCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEQUEREFERENCE);
                this.columnCHEQUEAMOUNT = new global::System.Data.DataColumn("CHEQUEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEQUEAMOUNT);
                this.columnCHEQUECLEARINGCHARGE = new global::System.Data.DataColumn("CHEQUECLEARINGCHARGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEQUECLEARINGCHARGE);
                this.columnBONDISSUEDATE = new global::System.Data.DataColumn("BONDISSUEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBONDISSUEDATE);
                this.columnTENURE = new global::System.Data.DataColumn("TENURE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENURE);
                this.columnTENURETERM = new global::System.Data.DataColumn("TENURETERM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENURETERM);
                this.columnTERMSINDAYS = new global::System.Data.DataColumn("TERMSINDAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMSINDAYS);
                this.columnINTERESTPAYMENTPERIOD = new global::System.Data.DataColumn("INTERESTPAYMENTPERIOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERESTPAYMENTPERIOD);
                this.columnMATURITYDATE = new global::System.Data.DataColumn("MATURITYDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATURITYDATE);
                this.columnAUCTION = new global::System.Data.DataColumn("AUCTION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUCTION);
                this.columnOFFERRATE = new global::System.Data.DataColumn("OFFERRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFFERRATE);
                this.columnCOUPONRATE = new global::System.Data.DataColumn("COUPONRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUPONRATE);
                this.columnBUYINGPRICE = new global::System.Data.DataColumn("BUYINGPRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUYINGPRICE);
                this.columnCOSTPRICE = new global::System.Data.DataColumn("COSTPRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOSTPRICE);
                this.columnPREMIUMPAID = new global::System.Data.DataColumn("PREMIUMPAID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREMIUMPAID);
                this.columnTAXRATE = new global::System.Data.DataColumn("TAXRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXRATE);
                this.columnDISCOUNT = new global::System.Data.DataColumn("DISCOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT);
                this.columnCOMMISSION = new global::System.Data.DataColumn("COMMISSION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION);
                this.columnHOLDINGINTERESTPAID = new global::System.Data.DataColumn("HOLDINGINTERESTPAID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLDINGINTERESTPAID);
                this.columnTOTALPURCHASEAMOUNT = new global::System.Data.DataColumn("TOTALPURCHASEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALPURCHASEAMOUNT);
                this.columnTOTALCOMMISSIONGAIN = new global::System.Data.DataColumn("TOTALCOMMISSIONGAIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALCOMMISSIONGAIN);
                this.columnINTERESTMODE = new global::System.Data.DataColumn("INTERESTMODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERESTMODE);
                this.columnGROSSINTEREST = new global::System.Data.DataColumn("GROSSINTEREST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROSSINTEREST);
                this.columnSOURCETAX = new global::System.Data.DataColumn("SOURCETAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOURCETAX);
                this.columnEXCISEDUTY = new global::System.Data.DataColumn("EXCISEDUTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCISEDUTY);
                this.columnOTHERCHARGE = new global::System.Data.DataColumn("OTHERCHARGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHERCHARGE);
                this.columnCOMPOUNDINTERESTTYPE = new global::System.Data.DataColumn("COMPOUNDINTERESTTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPOUNDINTERESTTYPE);
                this.columnCOMPOUNDINTERESTINTERVAL = new global::System.Data.DataColumn("COMPOUNDINTERESTINTERVAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPOUNDINTERESTINTERVAL);
                this.columnANNUALDAYS = new global::System.Data.DataColumn("ANNUALDAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANNUALDAYS);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnACCEPTEDBY = new global::System.Data.DataColumn("ACCEPTEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCEPTEDBY);
                this.columnACCEPTEDDATE = new global::System.Data.DataColumn("ACCEPTEDDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCEPTEDDATE);
                this.columnREJECTEDBY = new global::System.Data.DataColumn("REJECTEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREJECTEDBY);
                this.columnREJECTEDDATE = new global::System.Data.DataColumn("REJECTEDDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREJECTEDDATE);
                this.columnHOLDINGPERIOD = new global::System.Data.DataColumn("HOLDINGPERIOD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLDINGPERIOD);
                this.columnNETINTEREST = new global::System.Data.DataColumn("NETINTEREST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETINTEREST);
                this.columnOPENINGDATE = new global::System.Data.DataColumn("OPENINGDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPENINGDATE);
                this.columnREMARKS = new global::System.Data.DataColumn("REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnREFERENCE}, true));
                this.columnREFERENCE.AllowDBNull = false;
                this.columnREFERENCE.Unique = true;
                this.columnREFERENCE.MaxLength = 50;
                this.columnFINANCIALINSTITUTION_REFERENCE.MaxLength = 50;
                this.columnCREATEDBY.MaxLength = 50;
                this.columnLASTUPDATEDBY.MaxLength = 50;
                this.columnBONDID.MaxLength = 50;
                this.columnBONDTYPE.MaxLength = 50;
                this.columnSEQUENCENUMBER.MaxLength = 50;
                this.columnCHEQUEREFERENCE.MaxLength = 50;
                this.columnTENURETERM.MaxLength = 10;
                this.columnINTERESTPAYMENTPERIOD.MaxLength = 10;
                this.columnINTERESTMODE.MaxLength = 10;
                this.columnCOMPOUNDINTERESTTYPE.MaxLength = 10;
                this.columnCOMPOUNDINTERESTINTERVAL.MaxLength = 10;
                this.columnSTATUS.MaxLength = 10;
                this.columnACCEPTEDBY.MaxLength = 50;
                this.columnREJECTEDBY.MaxLength = 10;
                this.columnREMARKS.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BONDRow NewBONDRow() {
                return ((BONDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BONDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BONDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BONDRowChanged != null)) {
                    this.BONDRowChanged(this, new BONDRowChangeEvent(((BONDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BONDRowChanging != null)) {
                    this.BONDRowChanging(this, new BONDRowChangeEvent(((BONDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BONDRowDeleted != null)) {
                    this.BONDRowDeleted(this, new BONDRowChangeEvent(((BONDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BONDRowDeleting != null)) {
                    this.BONDRowDeleting(this, new BONDRowChangeEvent(((BONDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBONDRow(BONDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TreasuryBondStatement ds = new TreasuryBondStatement();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BONDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BONDRow : global::System.Data.DataRow {
            
            private BONDDataTable tableBOND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BONDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBOND = ((BONDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REFERENCE {
                get {
                    return ((string)(this[this.tableBOND.REFERENCEColumn]));
                }
                set {
                    this[this.tableBOND.REFERENCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FINANCIALINSTITUTION_REFERENCE {
                get {
                    try {
                        return ((string)(this[this.tableBOND.FINANCIALINSTITUTION_REFERENCEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINANCIALINSTITUTION_REFERENCE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.FINANCIALINSTITUTION_REFERENCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CREATEDDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOND.CREATEDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATEDDATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.CREATEDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CREATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableBOND.CREATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATEDBY\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.CREATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LASTUPDATED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOND.LASTUPDATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTUPDATED\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.LASTUPDATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LASTUPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableBOND.LASTUPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTUPDATEDBY\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.LASTUPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BONDID {
                get {
                    try {
                        return ((string)(this[this.tableBOND.BONDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BONDID\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.BONDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BONDTYPE {
                get {
                    try {
                        return ((string)(this[this.tableBOND.BONDTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BONDTYPE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.BONDTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEQUENCENUMBER {
                get {
                    try {
                        return ((string)(this[this.tableBOND.SEQUENCENUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEQUENCENUMBER\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.SEQUENCENUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FACEVALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.FACEVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACEVALUE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.FACEVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CHEQUEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOND.CHEQUEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEQUEDATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.CHEQUEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHEQUEREFERENCE {
                get {
                    try {
                        return ((string)(this[this.tableBOND.CHEQUEREFERENCEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEQUEREFERENCE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.CHEQUEREFERENCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CHEQUEAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.CHEQUEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEQUEAMOUNT\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.CHEQUEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CHEQUECLEARINGCHARGE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.CHEQUECLEARINGCHARGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHEQUECLEARINGCHARGE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.CHEQUECLEARINGCHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BONDISSUEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOND.BONDISSUEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BONDISSUEDATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.BONDISSUEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TENURE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.TENUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENURE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.TENUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TENURETERM {
                get {
                    try {
                        return ((string)(this[this.tableBOND.TENURETERMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENURETERM\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.TENURETERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TERMSINDAYS {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.TERMSINDAYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TERMSINDAYS\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.TERMSINDAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INTERESTPAYMENTPERIOD {
                get {
                    try {
                        return ((string)(this[this.tableBOND.INTERESTPAYMENTPERIODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTERESTPAYMENTPERIOD\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.INTERESTPAYMENTPERIODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MATURITYDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOND.MATURITYDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATURITYDATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.MATURITYDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AUCTION {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.AUCTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUCTION\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.AUCTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OFFERRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.OFFERRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFFERRATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.OFFERRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal COUPONRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.COUPONRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUPONRATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.COUPONRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUYINGPRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.BUYINGPRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BUYINGPRICE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.BUYINGPRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal COSTPRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.COSTPRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COSTPRICE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.COSTPRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PREMIUMPAID {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.PREMIUMPAIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREMIUMPAID\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.PREMIUMPAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TAXRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.TAXRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXRATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.TAXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DISCOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.DISCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISCOUNT\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.DISCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal COMMISSION {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.COMMISSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMISSION\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.COMMISSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HOLDINGINTERESTPAID {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.HOLDINGINTERESTPAIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HOLDINGINTERESTPAID\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.HOLDINGINTERESTPAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTALPURCHASEAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.TOTALPURCHASEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTALPURCHASEAMOUNT\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.TOTALPURCHASEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTALCOMMISSIONGAIN {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.TOTALCOMMISSIONGAINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTALCOMMISSIONGAIN\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.TOTALCOMMISSIONGAINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INTERESTMODE {
                get {
                    try {
                        return ((string)(this[this.tableBOND.INTERESTMODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTERESTMODE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.INTERESTMODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GROSSINTEREST {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.GROSSINTERESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GROSSINTEREST\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.GROSSINTERESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SOURCETAX {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.SOURCETAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOURCETAX\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.SOURCETAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXCISEDUTY {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.EXCISEDUTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXCISEDUTY\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.EXCISEDUTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OTHERCHARGE {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.OTHERCHARGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHERCHARGE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.OTHERCHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPOUNDINTERESTTYPE {
                get {
                    try {
                        return ((string)(this[this.tableBOND.COMPOUNDINTERESTTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPOUNDINTERESTTYPE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.COMPOUNDINTERESTTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPOUNDINTERESTINTERVAL {
                get {
                    try {
                        return ((string)(this[this.tableBOND.COMPOUNDINTERESTINTERVALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPOUNDINTERESTINTERVAL\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.COMPOUNDINTERESTINTERVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ANNUALDAYS {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.ANNUALDAYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANNUALDAYS\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.ANNUALDAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableBOND.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCEPTEDBY {
                get {
                    try {
                        return ((string)(this[this.tableBOND.ACCEPTEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCEPTEDBY\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.ACCEPTEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ACCEPTEDDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOND.ACCEPTEDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCEPTEDDATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.ACCEPTEDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REJECTEDBY {
                get {
                    try {
                        return ((string)(this[this.tableBOND.REJECTEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REJECTEDBY\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.REJECTEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime REJECTEDDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOND.REJECTEDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REJECTEDDATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.REJECTEDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HOLDINGPERIOD {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.HOLDINGPERIODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HOLDINGPERIOD\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.HOLDINGPERIODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NETINTEREST {
                get {
                    try {
                        return ((decimal)(this[this.tableBOND.NETINTERESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETINTEREST\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.NETINTERESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OPENINGDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOND.OPENINGDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPENINGDATE\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.OPENINGDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARKS {
                get {
                    try {
                        return ((string)(this[this.tableBOND.REMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS\' in table \'BOND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOND.REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINANCIALINSTITUTION_REFERENCENull() {
                return this.IsNull(this.tableBOND.FINANCIALINSTITUTION_REFERENCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINANCIALINSTITUTION_REFERENCENull() {
                this[this.tableBOND.FINANCIALINSTITUTION_REFERENCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATEDDATENull() {
                return this.IsNull(this.tableBOND.CREATEDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATEDDATENull() {
                this[this.tableBOND.CREATEDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATEDBYNull() {
                return this.IsNull(this.tableBOND.CREATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATEDBYNull() {
                this[this.tableBOND.CREATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTUPDATEDNull() {
                return this.IsNull(this.tableBOND.LASTUPDATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTUPDATEDNull() {
                this[this.tableBOND.LASTUPDATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTUPDATEDBYNull() {
                return this.IsNull(this.tableBOND.LASTUPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTUPDATEDBYNull() {
                this[this.tableBOND.LASTUPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBONDIDNull() {
                return this.IsNull(this.tableBOND.BONDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBONDIDNull() {
                this[this.tableBOND.BONDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBONDTYPENull() {
                return this.IsNull(this.tableBOND.BONDTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBONDTYPENull() {
                this[this.tableBOND.BONDTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEQUENCENUMBERNull() {
                return this.IsNull(this.tableBOND.SEQUENCENUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEQUENCENUMBERNull() {
                this[this.tableBOND.SEQUENCENUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFACEVALUENull() {
                return this.IsNull(this.tableBOND.FACEVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFACEVALUENull() {
                this[this.tableBOND.FACEVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHEQUEDATENull() {
                return this.IsNull(this.tableBOND.CHEQUEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHEQUEDATENull() {
                this[this.tableBOND.CHEQUEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHEQUEREFERENCENull() {
                return this.IsNull(this.tableBOND.CHEQUEREFERENCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHEQUEREFERENCENull() {
                this[this.tableBOND.CHEQUEREFERENCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHEQUEAMOUNTNull() {
                return this.IsNull(this.tableBOND.CHEQUEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHEQUEAMOUNTNull() {
                this[this.tableBOND.CHEQUEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHEQUECLEARINGCHARGENull() {
                return this.IsNull(this.tableBOND.CHEQUECLEARINGCHARGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHEQUECLEARINGCHARGENull() {
                this[this.tableBOND.CHEQUECLEARINGCHARGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBONDISSUEDATENull() {
                return this.IsNull(this.tableBOND.BONDISSUEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBONDISSUEDATENull() {
                this[this.tableBOND.BONDISSUEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTENURENull() {
                return this.IsNull(this.tableBOND.TENUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTENURENull() {
                this[this.tableBOND.TENUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTENURETERMNull() {
                return this.IsNull(this.tableBOND.TENURETERMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTENURETERMNull() {
                this[this.tableBOND.TENURETERMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTERMSINDAYSNull() {
                return this.IsNull(this.tableBOND.TERMSINDAYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTERMSINDAYSNull() {
                this[this.tableBOND.TERMSINDAYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTERESTPAYMENTPERIODNull() {
                return this.IsNull(this.tableBOND.INTERESTPAYMENTPERIODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTERESTPAYMENTPERIODNull() {
                this[this.tableBOND.INTERESTPAYMENTPERIODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMATURITYDATENull() {
                return this.IsNull(this.tableBOND.MATURITYDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMATURITYDATENull() {
                this[this.tableBOND.MATURITYDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAUCTIONNull() {
                return this.IsNull(this.tableBOND.AUCTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAUCTIONNull() {
                this[this.tableBOND.AUCTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOFFERRATENull() {
                return this.IsNull(this.tableBOND.OFFERRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOFFERRATENull() {
                this[this.tableBOND.OFFERRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOUPONRATENull() {
                return this.IsNull(this.tableBOND.COUPONRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOUPONRATENull() {
                this[this.tableBOND.COUPONRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUYINGPRICENull() {
                return this.IsNull(this.tableBOND.BUYINGPRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUYINGPRICENull() {
                this[this.tableBOND.BUYINGPRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOSTPRICENull() {
                return this.IsNull(this.tableBOND.COSTPRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOSTPRICENull() {
                this[this.tableBOND.COSTPRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPREMIUMPAIDNull() {
                return this.IsNull(this.tableBOND.PREMIUMPAIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPREMIUMPAIDNull() {
                this[this.tableBOND.PREMIUMPAIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTAXRATENull() {
                return this.IsNull(this.tableBOND.TAXRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTAXRATENull() {
                this[this.tableBOND.TAXRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDISCOUNTNull() {
                return this.IsNull(this.tableBOND.DISCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDISCOUNTNull() {
                this[this.tableBOND.DISCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOMMISSIONNull() {
                return this.IsNull(this.tableBOND.COMMISSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOMMISSIONNull() {
                this[this.tableBOND.COMMISSIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHOLDINGINTERESTPAIDNull() {
                return this.IsNull(this.tableBOND.HOLDINGINTERESTPAIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHOLDINGINTERESTPAIDNull() {
                this[this.tableBOND.HOLDINGINTERESTPAIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTALPURCHASEAMOUNTNull() {
                return this.IsNull(this.tableBOND.TOTALPURCHASEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTALPURCHASEAMOUNTNull() {
                this[this.tableBOND.TOTALPURCHASEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTALCOMMISSIONGAINNull() {
                return this.IsNull(this.tableBOND.TOTALCOMMISSIONGAINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTALCOMMISSIONGAINNull() {
                this[this.tableBOND.TOTALCOMMISSIONGAINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTERESTMODENull() {
                return this.IsNull(this.tableBOND.INTERESTMODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTERESTMODENull() {
                this[this.tableBOND.INTERESTMODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGROSSINTERESTNull() {
                return this.IsNull(this.tableBOND.GROSSINTERESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGROSSINTERESTNull() {
                this[this.tableBOND.GROSSINTERESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSOURCETAXNull() {
                return this.IsNull(this.tableBOND.SOURCETAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSOURCETAXNull() {
                this[this.tableBOND.SOURCETAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXCISEDUTYNull() {
                return this.IsNull(this.tableBOND.EXCISEDUTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXCISEDUTYNull() {
                this[this.tableBOND.EXCISEDUTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOTHERCHARGENull() {
                return this.IsNull(this.tableBOND.OTHERCHARGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOTHERCHARGENull() {
                this[this.tableBOND.OTHERCHARGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOMPOUNDINTERESTTYPENull() {
                return this.IsNull(this.tableBOND.COMPOUNDINTERESTTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOMPOUNDINTERESTTYPENull() {
                this[this.tableBOND.COMPOUNDINTERESTTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOMPOUNDINTERESTINTERVALNull() {
                return this.IsNull(this.tableBOND.COMPOUNDINTERESTINTERVALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOMPOUNDINTERESTINTERVALNull() {
                this[this.tableBOND.COMPOUNDINTERESTINTERVALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsANNUALDAYSNull() {
                return this.IsNull(this.tableBOND.ANNUALDAYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetANNUALDAYSNull() {
                this[this.tableBOND.ANNUALDAYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableBOND.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTATUSNull() {
                this[this.tableBOND.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCEPTEDBYNull() {
                return this.IsNull(this.tableBOND.ACCEPTEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCEPTEDBYNull() {
                this[this.tableBOND.ACCEPTEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCEPTEDDATENull() {
                return this.IsNull(this.tableBOND.ACCEPTEDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCEPTEDDATENull() {
                this[this.tableBOND.ACCEPTEDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREJECTEDBYNull() {
                return this.IsNull(this.tableBOND.REJECTEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREJECTEDBYNull() {
                this[this.tableBOND.REJECTEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREJECTEDDATENull() {
                return this.IsNull(this.tableBOND.REJECTEDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREJECTEDDATENull() {
                this[this.tableBOND.REJECTEDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHOLDINGPERIODNull() {
                return this.IsNull(this.tableBOND.HOLDINGPERIODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHOLDINGPERIODNull() {
                this[this.tableBOND.HOLDINGPERIODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNETINTERESTNull() {
                return this.IsNull(this.tableBOND.NETINTERESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNETINTERESTNull() {
                this[this.tableBOND.NETINTERESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPENINGDATENull() {
                return this.IsNull(this.tableBOND.OPENINGDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPENINGDATENull() {
                this[this.tableBOND.OPENINGDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKSNull() {
                return this.IsNull(this.tableBOND.REMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKSNull() {
                this[this.tableBOND.REMARKSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BONDRowChangeEvent : global::System.EventArgs {
            
            private BONDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BONDRowChangeEvent(BONDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BONDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace InvestmentManagement.DataSetContainer.TreasuryBondStatementTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BONDTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BONDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BOND";
            tableMapping.ColumnMappings.Add("REFERENCE", "REFERENCE");
            tableMapping.ColumnMappings.Add("FINANCIALINSTITUTION_REFERENCE", "FINANCIALINSTITUTION_REFERENCE");
            tableMapping.ColumnMappings.Add("CREATEDDATE", "CREATEDDATE");
            tableMapping.ColumnMappings.Add("CREATEDBY", "CREATEDBY");
            tableMapping.ColumnMappings.Add("LASTUPDATED", "LASTUPDATED");
            tableMapping.ColumnMappings.Add("LASTUPDATEDBY", "LASTUPDATEDBY");
            tableMapping.ColumnMappings.Add("BONDID", "BONDID");
            tableMapping.ColumnMappings.Add("BONDTYPE", "BONDTYPE");
            tableMapping.ColumnMappings.Add("SEQUENCENUMBER", "SEQUENCENUMBER");
            tableMapping.ColumnMappings.Add("FACEVALUE", "FACEVALUE");
            tableMapping.ColumnMappings.Add("CHEQUEDATE", "CHEQUEDATE");
            tableMapping.ColumnMappings.Add("CHEQUEREFERENCE", "CHEQUEREFERENCE");
            tableMapping.ColumnMappings.Add("CHEQUEAMOUNT", "CHEQUEAMOUNT");
            tableMapping.ColumnMappings.Add("CHEQUECLEARINGCHARGE", "CHEQUECLEARINGCHARGE");
            tableMapping.ColumnMappings.Add("BONDISSUEDATE", "BONDISSUEDATE");
            tableMapping.ColumnMappings.Add("TENURE", "TENURE");
            tableMapping.ColumnMappings.Add("TENURETERM", "TENURETERM");
            tableMapping.ColumnMappings.Add("TERMSINDAYS", "TERMSINDAYS");
            tableMapping.ColumnMappings.Add("INTERESTPAYMENTPERIOD", "INTERESTPAYMENTPERIOD");
            tableMapping.ColumnMappings.Add("MATURITYDATE", "MATURITYDATE");
            tableMapping.ColumnMappings.Add("AUCTION", "AUCTION");
            tableMapping.ColumnMappings.Add("OFFERRATE", "OFFERRATE");
            tableMapping.ColumnMappings.Add("COUPONRATE", "COUPONRATE");
            tableMapping.ColumnMappings.Add("BUYINGPRICE", "BUYINGPRICE");
            tableMapping.ColumnMappings.Add("COSTPRICE", "COSTPRICE");
            tableMapping.ColumnMappings.Add("PREMIUMPAID", "PREMIUMPAID");
            tableMapping.ColumnMappings.Add("TAXRATE", "TAXRATE");
            tableMapping.ColumnMappings.Add("DISCOUNT", "DISCOUNT");
            tableMapping.ColumnMappings.Add("COMMISSION", "COMMISSION");
            tableMapping.ColumnMappings.Add("HOLDINGINTERESTPAID", "HOLDINGINTERESTPAID");
            tableMapping.ColumnMappings.Add("TOTALPURCHASEAMOUNT", "TOTALPURCHASEAMOUNT");
            tableMapping.ColumnMappings.Add("TOTALCOMMISSIONGAIN", "TOTALCOMMISSIONGAIN");
            tableMapping.ColumnMappings.Add("INTERESTMODE", "INTERESTMODE");
            tableMapping.ColumnMappings.Add("GROSSINTEREST", "GROSSINTEREST");
            tableMapping.ColumnMappings.Add("SOURCETAX", "SOURCETAX");
            tableMapping.ColumnMappings.Add("EXCISEDUTY", "EXCISEDUTY");
            tableMapping.ColumnMappings.Add("OTHERCHARGE", "OTHERCHARGE");
            tableMapping.ColumnMappings.Add("COMPOUNDINTERESTTYPE", "COMPOUNDINTERESTTYPE");
            tableMapping.ColumnMappings.Add("COMPOUNDINTERESTINTERVAL", "COMPOUNDINTERESTINTERVAL");
            tableMapping.ColumnMappings.Add("ANNUALDAYS", "ANNUALDAYS");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("ACCEPTEDBY", "ACCEPTEDBY");
            tableMapping.ColumnMappings.Add("ACCEPTEDDATE", "ACCEPTEDDATE");
            tableMapping.ColumnMappings.Add("REJECTEDBY", "REJECTEDBY");
            tableMapping.ColumnMappings.Add("REJECTEDDATE", "REJECTEDDATE");
            tableMapping.ColumnMappings.Add("HOLDINGPERIOD", "HOLDINGPERIOD");
            tableMapping.ColumnMappings.Add("NETINTEREST", "NETINTEREST");
            tableMapping.ColumnMappings.Add("OPENINGDATE", "OPENINGDATE");
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"MPRO\".\"BOND\" WHERE ((\"REFERENCE\" = :Original_REFERENCE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFERENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REFERENCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"MPRO\".\"BOND\" (\"REFERENCE\", \"FINANCIALINSTITUTION_REFERENCE\", \"CREATE" +
                "DDATE\", \"CREATEDBY\", \"LASTUPDATED\", \"LASTUPDATEDBY\", \"BONDID\", \"BONDTYPE\", \"SEQU" +
                "ENCENUMBER\", \"FACEVALUE\", \"CHEQUEDATE\", \"CHEQUEREFERENCE\", \"CHEQUEAMOUNT\", \"CHEQ" +
                "UECLEARINGCHARGE\", \"BONDISSUEDATE\", \"TENURE\", \"TENURETERM\", \"TERMSINDAYS\", \"INTE" +
                "RESTPAYMENTPERIOD\", \"MATURITYDATE\", \"AUCTION\", \"OFFERRATE\", \"COUPONRATE\", \"BUYIN" +
                "GPRICE\", \"COSTPRICE\", \"PREMIUMPAID\", \"TAXRATE\", \"DISCOUNT\", \"COMMISSION\", \"HOLDI" +
                "NGINTERESTPAID\", \"TOTALPURCHASEAMOUNT\", \"TOTALCOMMISSIONGAIN\", \"INTERESTMODE\", \"" +
                "GROSSINTEREST\", \"SOURCETAX\", \"EXCISEDUTY\", \"OTHERCHARGE\", \"COMPOUNDINTERESTTYPE\"" +
                ", \"COMPOUNDINTERESTINTERVAL\", \"ANNUALDAYS\", \"STATUS\", \"ACCEPTEDBY\", \"ACCEPTEDDAT" +
                "E\", \"REJECTEDBY\", \"REJECTEDDATE\", \"HOLDINGPERIOD\", \"NETINTEREST\", \"OPENINGDATE\"," +
                " \"REMARKS\") VALUES (:REFERENCE, :p1, :CREATEDDATE, :CREATEDBY, :LASTUPDATED, :LA" +
                "STUPDATEDBY, :BONDID, :BONDTYPE, :SEQUENCENUMBER, :FACEVALUE, :CHEQUEDATE, :CHEQ" +
                "UEREFERENCE, :CHEQUEAMOUNT, :CHEQUECLEARINGCHARGE, :BONDISSUEDATE, :TENURE, :TEN" +
                "URETERM, :TERMSINDAYS, :INTERESTPAYMENTPERIOD, :MATURITYDATE, :AUCTION, :OFFERRA" +
                "TE, :COUPONRATE, :BUYINGPRICE, :COSTPRICE, :PREMIUMPAID, :TAXRATE, :DISCOUNT, :C" +
                "OMMISSION, :HOLDINGINTERESTPAID, :TOTALPURCHASEAMOUNT, :TOTALCOMMISSIONGAIN, :IN" +
                "TERESTMODE, :GROSSINTEREST, :SOURCETAX, :EXCISEDUTY, :OTHERCHARGE, :COMPOUNDINTE" +
                "RESTTYPE, :p4, :ANNUALDAYS, :STATUS, :ACCEPTEDBY, :ACCEPTEDDATE, :REJECTEDBY, :R" +
                "EJECTEDDATE, :HOLDINGPERIOD, :NETINTEREST, :OPENINGDATE, :REMARKS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFERENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REFERENCE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "p1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "FINANCIALINSTITUTION_REFERENCE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CREATEDDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CREATEDDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CREATEDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CREATEDBY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LASTUPDATED";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LASTUPDATEDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATEDBY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BONDID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BONDID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BONDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BONDTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEQUENCENUMBER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SEQUENCENUMBER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FACEVALUE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FACEVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CHEQUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CHEQUEDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CHEQUEREFERENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CHEQUEREFERENCE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CHEQUEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CHEQUEAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CHEQUECLEARINGCHARGE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CHEQUECLEARINGCHARGE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BONDISSUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "BONDISSUEDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TENURE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TENURE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TENURETERM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TENURETERM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TERMSINDAYS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TERMSINDAYS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INTERESTPAYMENTPERIOD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "INTERESTPAYMENTPERIOD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MATURITYDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "MATURITYDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AUCTION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AUCTION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OFFERRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OFFERRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COUPONRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COUPONRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BUYINGPRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BUYINGPRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COSTPRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COSTPRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PREMIUMPAID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PREMIUMPAID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TAXRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TAXRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DISCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DISCOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMISSION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMISSION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "HOLDINGINTERESTPAID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HOLDINGINTERESTPAID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTALPURCHASEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTALPURCHASEAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTALCOMMISSIONGAIN";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTALCOMMISSIONGAIN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INTERESTMODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "INTERESTMODE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GROSSINTEREST";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSSINTEREST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SOURCETAX";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SOURCETAX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXCISEDUTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEDUTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OTHERCHARGE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHERCHARGE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMPOUNDINTERESTTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "COMPOUNDINTERESTTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "p4";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "COMPOUNDINTERESTINTERVAL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ANNUALDAYS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ANNUALDAYS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STATUS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ACCEPTEDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ACCEPTEDBY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ACCEPTEDDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ACCEPTEDDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REJECTEDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REJECTEDBY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REJECTEDDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REJECTEDDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "HOLDINGPERIOD";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HOLDINGPERIOD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NETINTEREST";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NETINTEREST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OPENINGDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "OPENINGDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REMARKS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "REMARKS";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"MPRO\".\"BOND\" SET \"REFERENCE\" = :REFERENCE, \"FINANCIALINSTITUTION_REFERENC" +
                "E\" = :p1, \"CREATEDDATE\" = :CREATEDDATE, \"CREATEDBY\" = :CREATEDBY, \"LASTUPDATED\" " +
                "= :LASTUPDATED, \"LASTUPDATEDBY\" = :LASTUPDATEDBY, \"BONDID\" = :BONDID, \"BONDTYPE\"" +
                " = :BONDTYPE, \"SEQUENCENUMBER\" = :SEQUENCENUMBER, \"FACEVALUE\" = :FACEVALUE, \"CHE" +
                "QUEDATE\" = :CHEQUEDATE, \"CHEQUEREFERENCE\" = :CHEQUEREFERENCE, \"CHEQUEAMOUNT\" = :" +
                "CHEQUEAMOUNT, \"CHEQUECLEARINGCHARGE\" = :CHEQUECLEARINGCHARGE, \"BONDISSUEDATE\" = " +
                ":BONDISSUEDATE, \"TENURE\" = :TENURE, \"TENURETERM\" = :TENURETERM, \"TERMSINDAYS\" = " +
                ":TERMSINDAYS, \"INTERESTPAYMENTPERIOD\" = :INTERESTPAYMENTPERIOD, \"MATURITYDATE\" =" +
                " :MATURITYDATE, \"AUCTION\" = :AUCTION, \"OFFERRATE\" = :OFFERRATE, \"COUPONRATE\" = :" +
                "COUPONRATE, \"BUYINGPRICE\" = :BUYINGPRICE, \"COSTPRICE\" = :COSTPRICE, \"PREMIUMPAID" +
                "\" = :PREMIUMPAID, \"TAXRATE\" = :TAXRATE, \"DISCOUNT\" = :DISCOUNT, \"COMMISSION\" = :" +
                "COMMISSION, \"HOLDINGINTERESTPAID\" = :HOLDINGINTERESTPAID, \"TOTALPURCHASEAMOUNT\" " +
                "= :TOTALPURCHASEAMOUNT, \"TOTALCOMMISSIONGAIN\" = :TOTALCOMMISSIONGAIN, \"INTERESTM" +
                "ODE\" = :INTERESTMODE, \"GROSSINTEREST\" = :GROSSINTEREST, \"SOURCETAX\" = :SOURCETAX" +
                ", \"EXCISEDUTY\" = :EXCISEDUTY, \"OTHERCHARGE\" = :OTHERCHARGE, \"COMPOUNDINTERESTTYP" +
                "E\" = :COMPOUNDINTERESTTYPE, \"COMPOUNDINTERESTINTERVAL\" = :p4, \"ANNUALDAYS\" = :AN" +
                "NUALDAYS, \"STATUS\" = :STATUS, \"ACCEPTEDBY\" = :ACCEPTEDBY, \"ACCEPTEDDATE\" = :ACCE" +
                "PTEDDATE, \"REJECTEDBY\" = :REJECTEDBY, \"REJECTEDDATE\" = :REJECTEDDATE, \"HOLDINGPE" +
                "RIOD\" = :HOLDINGPERIOD, \"NETINTEREST\" = :NETINTEREST, \"OPENINGDATE\" = :OPENINGDA" +
                "TE, \"REMARKS\" = :REMARKS WHERE ((\"REFERENCE\" = :Original_REFERENCE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFERENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REFERENCE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "p1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "FINANCIALINSTITUTION_REFERENCE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CREATEDDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CREATEDDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CREATEDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CREATEDBY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LASTUPDATED";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LASTUPDATEDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "LASTUPDATEDBY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BONDID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BONDID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BONDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BONDTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEQUENCENUMBER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SEQUENCENUMBER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FACEVALUE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FACEVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CHEQUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CHEQUEDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CHEQUEREFERENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CHEQUEREFERENCE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CHEQUEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CHEQUEAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CHEQUECLEARINGCHARGE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CHEQUECLEARINGCHARGE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BONDISSUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "BONDISSUEDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TENURE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TENURE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TENURETERM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TENURETERM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TERMSINDAYS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TERMSINDAYS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INTERESTPAYMENTPERIOD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "INTERESTPAYMENTPERIOD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MATURITYDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "MATURITYDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AUCTION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AUCTION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OFFERRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OFFERRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COUPONRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COUPONRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BUYINGPRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BUYINGPRICE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COSTPRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COSTPRICE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PREMIUMPAID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PREMIUMPAID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TAXRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TAXRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DISCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DISCOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMISSION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMISSION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "HOLDINGINTERESTPAID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HOLDINGINTERESTPAID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTALPURCHASEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTALPURCHASEAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTALCOMMISSIONGAIN";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTALCOMMISSIONGAIN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INTERESTMODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "INTERESTMODE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GROSSINTEREST";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSSINTEREST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SOURCETAX";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SOURCETAX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXCISEDUTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEDUTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OTHERCHARGE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHERCHARGE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMPOUNDINTERESTTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "COMPOUNDINTERESTTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "p4";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "COMPOUNDINTERESTINTERVAL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ANNUALDAYS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ANNUALDAYS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STATUS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ACCEPTEDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ACCEPTEDBY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ACCEPTEDDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ACCEPTEDDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REJECTEDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REJECTEDBY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REJECTEDDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REJECTEDDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "HOLDINGPERIOD";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HOLDINGPERIOD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NETINTEREST";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NETINTEREST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OPENINGDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "OPENINGDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REMARKS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "REMARKS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFERENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.NVarchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REFERENCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ""REFERENCE"", FINANCIALINSTITUTION_REFERENCE, CREATEDDATE, CREATEDBY, LASTUPDATED, LASTUPDATEDBY, BONDID, BONDTYPE, SEQUENCENUMBER, FACEVALUE, CHEQUEDATE, CHEQUEREFERENCE, CHEQUEAMOUNT, CHEQUECLEARINGCHARGE, BONDISSUEDATE, TENURE, TENURETERM, TERMSINDAYS, INTERESTPAYMENTPERIOD, MATURITYDATE, AUCTION, OFFERRATE, COUPONRATE, BUYINGPRICE, COSTPRICE, PREMIUMPAID, TAXRATE, DISCOUNT, COMMISSION, HOLDINGINTERESTPAID, TOTALPURCHASEAMOUNT, TOTALCOMMISSIONGAIN, INTERESTMODE, GROSSINTEREST, SOURCETAX, EXCISEDUTY, OTHERCHARGE, COMPOUNDINTERESTTYPE, COMPOUNDINTERESTINTERVAL, ANNUALDAYS, STATUS, ACCEPTEDBY, ACCEPTEDDATE, REJECTEDBY, REJECTEDDATE, HOLDINGPERIOD, NETINTEREST, OPENINGDATE, REMARKS FROM MPRO.BOND";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TreasuryBondStatement.BONDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TreasuryBondStatement.BONDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TreasuryBondStatement.BONDDataTable dataTable = new TreasuryBondStatement.BONDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TreasuryBondStatement.BONDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TreasuryBondStatement dataSet) {
            return this.Adapter.Update(dataSet, "BOND");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_REFERENCE) {
            if ((Original_REFERENCE == null)) {
                throw new global::System.ArgumentNullException("Original_REFERENCE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_REFERENCE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string REFERENCE, 
                    string p1, 
                    global::System.Nullable<global::System.DateTime> CREATEDDATE, 
                    string CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> LASTUPDATED, 
                    string LASTUPDATEDBY, 
                    string BONDID, 
                    string BONDTYPE, 
                    string SEQUENCENUMBER, 
                    global::System.Nullable<decimal> FACEVALUE, 
                    global::System.Nullable<global::System.DateTime> CHEQUEDATE, 
                    string CHEQUEREFERENCE, 
                    global::System.Nullable<decimal> CHEQUEAMOUNT, 
                    global::System.Nullable<decimal> CHEQUECLEARINGCHARGE, 
                    global::System.Nullable<global::System.DateTime> BONDISSUEDATE, 
                    global::System.Nullable<decimal> TENURE, 
                    string TENURETERM, 
                    global::System.Nullable<decimal> TERMSINDAYS, 
                    string INTERESTPAYMENTPERIOD, 
                    global::System.Nullable<global::System.DateTime> MATURITYDATE, 
                    global::System.Nullable<decimal> AUCTION, 
                    global::System.Nullable<decimal> OFFERRATE, 
                    global::System.Nullable<decimal> COUPONRATE, 
                    global::System.Nullable<decimal> BUYINGPRICE, 
                    global::System.Nullable<decimal> COSTPRICE, 
                    global::System.Nullable<decimal> PREMIUMPAID, 
                    global::System.Nullable<decimal> TAXRATE, 
                    global::System.Nullable<decimal> DISCOUNT, 
                    global::System.Nullable<decimal> COMMISSION, 
                    global::System.Nullable<decimal> HOLDINGINTERESTPAID, 
                    global::System.Nullable<decimal> TOTALPURCHASEAMOUNT, 
                    global::System.Nullable<decimal> TOTALCOMMISSIONGAIN, 
                    string INTERESTMODE, 
                    global::System.Nullable<decimal> GROSSINTEREST, 
                    global::System.Nullable<decimal> SOURCETAX, 
                    global::System.Nullable<decimal> EXCISEDUTY, 
                    global::System.Nullable<decimal> OTHERCHARGE, 
                    string COMPOUNDINTERESTTYPE, 
                    string p4, 
                    global::System.Nullable<decimal> ANNUALDAYS, 
                    string STATUS, 
                    string ACCEPTEDBY, 
                    global::System.Nullable<global::System.DateTime> ACCEPTEDDATE, 
                    string REJECTEDBY, 
                    global::System.Nullable<global::System.DateTime> REJECTEDDATE, 
                    global::System.Nullable<decimal> HOLDINGPERIOD, 
                    global::System.Nullable<decimal> NETINTEREST, 
                    global::System.Nullable<global::System.DateTime> OPENINGDATE, 
                    string REMARKS) {
            if ((REFERENCE == null)) {
                throw new global::System.ArgumentNullException("REFERENCE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(REFERENCE));
            }
            if ((p1 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p1));
            }
            if ((CREATEDDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(CREATEDDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CREATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CREATEDBY));
            }
            if ((LASTUPDATED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(LASTUPDATED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((LASTUPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LASTUPDATEDBY));
            }
            if ((BONDID == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(BONDID));
            }
            if ((BONDTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BONDTYPE));
            }
            if ((SEQUENCENUMBER == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SEQUENCENUMBER));
            }
            if ((FACEVALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(FACEVALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CHEQUEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(CHEQUEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CHEQUEREFERENCE == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CHEQUEREFERENCE));
            }
            if ((CHEQUEAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(CHEQUEAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CHEQUECLEARINGCHARGE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(CHEQUECLEARINGCHARGE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BONDISSUEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(BONDISSUEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((TENURE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(TENURE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TENURETERM == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(TENURETERM));
            }
            if ((TERMSINDAYS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(TERMSINDAYS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((INTERESTPAYMENTPERIOD == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(INTERESTPAYMENTPERIOD));
            }
            if ((MATURITYDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(MATURITYDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((AUCTION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(AUCTION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((OFFERRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(OFFERRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((COUPONRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(COUPONRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((BUYINGPRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(BUYINGPRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((COSTPRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(COSTPRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((PREMIUMPAID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(PREMIUMPAID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((TAXRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(TAXRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((DISCOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(DISCOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((COMMISSION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(COMMISSION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((HOLDINGINTERESTPAID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(HOLDINGINTERESTPAID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((TOTALPURCHASEAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(TOTALPURCHASEAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((TOTALCOMMISSIONGAIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(TOTALCOMMISSIONGAIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((INTERESTMODE == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(INTERESTMODE));
            }
            if ((GROSSINTEREST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(GROSSINTEREST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((SOURCETAX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(SOURCETAX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((EXCISEDUTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(EXCISEDUTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((OTHERCHARGE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(OTHERCHARGE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((COMPOUNDINTERESTTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(COMPOUNDINTERESTTYPE));
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(p4));
            }
            if ((ANNUALDAYS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(ANNUALDAYS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(STATUS));
            }
            if ((ACCEPTEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(ACCEPTEDBY));
            }
            if ((ACCEPTEDDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(ACCEPTEDDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((REJECTEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(REJECTEDBY));
            }
            if ((REJECTEDDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(REJECTEDDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((HOLDINGPERIOD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(HOLDINGPERIOD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((NETINTEREST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(NETINTEREST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((OPENINGDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((System.DateTime)(OPENINGDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((REMARKS == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(REMARKS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string REFERENCE, 
                    string p1, 
                    global::System.Nullable<global::System.DateTime> CREATEDDATE, 
                    string CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> LASTUPDATED, 
                    string LASTUPDATEDBY, 
                    string BONDID, 
                    string BONDTYPE, 
                    string SEQUENCENUMBER, 
                    global::System.Nullable<decimal> FACEVALUE, 
                    global::System.Nullable<global::System.DateTime> CHEQUEDATE, 
                    string CHEQUEREFERENCE, 
                    global::System.Nullable<decimal> CHEQUEAMOUNT, 
                    global::System.Nullable<decimal> CHEQUECLEARINGCHARGE, 
                    global::System.Nullable<global::System.DateTime> BONDISSUEDATE, 
                    global::System.Nullable<decimal> TENURE, 
                    string TENURETERM, 
                    global::System.Nullable<decimal> TERMSINDAYS, 
                    string INTERESTPAYMENTPERIOD, 
                    global::System.Nullable<global::System.DateTime> MATURITYDATE, 
                    global::System.Nullable<decimal> AUCTION, 
                    global::System.Nullable<decimal> OFFERRATE, 
                    global::System.Nullable<decimal> COUPONRATE, 
                    global::System.Nullable<decimal> BUYINGPRICE, 
                    global::System.Nullable<decimal> COSTPRICE, 
                    global::System.Nullable<decimal> PREMIUMPAID, 
                    global::System.Nullable<decimal> TAXRATE, 
                    global::System.Nullable<decimal> DISCOUNT, 
                    global::System.Nullable<decimal> COMMISSION, 
                    global::System.Nullable<decimal> HOLDINGINTERESTPAID, 
                    global::System.Nullable<decimal> TOTALPURCHASEAMOUNT, 
                    global::System.Nullable<decimal> TOTALCOMMISSIONGAIN, 
                    string INTERESTMODE, 
                    global::System.Nullable<decimal> GROSSINTEREST, 
                    global::System.Nullable<decimal> SOURCETAX, 
                    global::System.Nullable<decimal> EXCISEDUTY, 
                    global::System.Nullable<decimal> OTHERCHARGE, 
                    string COMPOUNDINTERESTTYPE, 
                    string p4, 
                    global::System.Nullable<decimal> ANNUALDAYS, 
                    string STATUS, 
                    string ACCEPTEDBY, 
                    global::System.Nullable<global::System.DateTime> ACCEPTEDDATE, 
                    string REJECTEDBY, 
                    global::System.Nullable<global::System.DateTime> REJECTEDDATE, 
                    global::System.Nullable<decimal> HOLDINGPERIOD, 
                    global::System.Nullable<decimal> NETINTEREST, 
                    global::System.Nullable<global::System.DateTime> OPENINGDATE, 
                    string REMARKS, 
                    string Original_REFERENCE) {
            if ((REFERENCE == null)) {
                throw new global::System.ArgumentNullException("REFERENCE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(REFERENCE));
            }
            if ((p1 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p1));
            }
            if ((CREATEDDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(CREATEDDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CREATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CREATEDBY));
            }
            if ((LASTUPDATED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(LASTUPDATED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((LASTUPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LASTUPDATEDBY));
            }
            if ((BONDID == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(BONDID));
            }
            if ((BONDTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BONDTYPE));
            }
            if ((SEQUENCENUMBER == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SEQUENCENUMBER));
            }
            if ((FACEVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(FACEVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CHEQUEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(CHEQUEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CHEQUEREFERENCE == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CHEQUEREFERENCE));
            }
            if ((CHEQUEAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(CHEQUEAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CHEQUECLEARINGCHARGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(CHEQUECLEARINGCHARGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BONDISSUEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(BONDISSUEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((TENURE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(TENURE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TENURETERM == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(TENURETERM));
            }
            if ((TERMSINDAYS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(TERMSINDAYS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((INTERESTPAYMENTPERIOD == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(INTERESTPAYMENTPERIOD));
            }
            if ((MATURITYDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(MATURITYDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((AUCTION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(AUCTION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((OFFERRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(OFFERRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((COUPONRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(COUPONRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((BUYINGPRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(BUYINGPRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((COSTPRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(COSTPRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((PREMIUMPAID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(PREMIUMPAID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((TAXRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(TAXRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((DISCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(DISCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((COMMISSION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(COMMISSION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((HOLDINGINTERESTPAID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(HOLDINGINTERESTPAID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((TOTALPURCHASEAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(TOTALPURCHASEAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((TOTALCOMMISSIONGAIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(TOTALCOMMISSIONGAIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((INTERESTMODE == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(INTERESTMODE));
            }
            if ((GROSSINTEREST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(GROSSINTEREST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((SOURCETAX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(SOURCETAX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((EXCISEDUTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(EXCISEDUTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((OTHERCHARGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(OTHERCHARGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((COMPOUNDINTERESTTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(COMPOUNDINTERESTTYPE));
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(p4));
            }
            if ((ANNUALDAYS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(ANNUALDAYS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(STATUS));
            }
            if ((ACCEPTEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(ACCEPTEDBY));
            }
            if ((ACCEPTEDDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(ACCEPTEDDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((REJECTEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(REJECTEDBY));
            }
            if ((REJECTEDDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(REJECTEDDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((HOLDINGPERIOD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(HOLDINGPERIOD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((NETINTEREST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(NETINTEREST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((OPENINGDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(OPENINGDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((REMARKS == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(REMARKS));
            }
            if ((Original_REFERENCE == null)) {
                throw new global::System.ArgumentNullException("Original_REFERENCE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_REFERENCE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string p1, 
                    global::System.Nullable<global::System.DateTime> CREATEDDATE, 
                    string CREATEDBY, 
                    global::System.Nullable<global::System.DateTime> LASTUPDATED, 
                    string LASTUPDATEDBY, 
                    string BONDID, 
                    string BONDTYPE, 
                    string SEQUENCENUMBER, 
                    global::System.Nullable<decimal> FACEVALUE, 
                    global::System.Nullable<global::System.DateTime> CHEQUEDATE, 
                    string CHEQUEREFERENCE, 
                    global::System.Nullable<decimal> CHEQUEAMOUNT, 
                    global::System.Nullable<decimal> CHEQUECLEARINGCHARGE, 
                    global::System.Nullable<global::System.DateTime> BONDISSUEDATE, 
                    global::System.Nullable<decimal> TENURE, 
                    string TENURETERM, 
                    global::System.Nullable<decimal> TERMSINDAYS, 
                    string INTERESTPAYMENTPERIOD, 
                    global::System.Nullable<global::System.DateTime> MATURITYDATE, 
                    global::System.Nullable<decimal> AUCTION, 
                    global::System.Nullable<decimal> OFFERRATE, 
                    global::System.Nullable<decimal> COUPONRATE, 
                    global::System.Nullable<decimal> BUYINGPRICE, 
                    global::System.Nullable<decimal> COSTPRICE, 
                    global::System.Nullable<decimal> PREMIUMPAID, 
                    global::System.Nullable<decimal> TAXRATE, 
                    global::System.Nullable<decimal> DISCOUNT, 
                    global::System.Nullable<decimal> COMMISSION, 
                    global::System.Nullable<decimal> HOLDINGINTERESTPAID, 
                    global::System.Nullable<decimal> TOTALPURCHASEAMOUNT, 
                    global::System.Nullable<decimal> TOTALCOMMISSIONGAIN, 
                    string INTERESTMODE, 
                    global::System.Nullable<decimal> GROSSINTEREST, 
                    global::System.Nullable<decimal> SOURCETAX, 
                    global::System.Nullable<decimal> EXCISEDUTY, 
                    global::System.Nullable<decimal> OTHERCHARGE, 
                    string COMPOUNDINTERESTTYPE, 
                    string p4, 
                    global::System.Nullable<decimal> ANNUALDAYS, 
                    string STATUS, 
                    string ACCEPTEDBY, 
                    global::System.Nullable<global::System.DateTime> ACCEPTEDDATE, 
                    string REJECTEDBY, 
                    global::System.Nullable<global::System.DateTime> REJECTEDDATE, 
                    global::System.Nullable<decimal> HOLDINGPERIOD, 
                    global::System.Nullable<decimal> NETINTEREST, 
                    global::System.Nullable<global::System.DateTime> OPENINGDATE, 
                    string REMARKS, 
                    string Original_REFERENCE) {
            return this.Update(Original_REFERENCE, p1, CREATEDDATE, CREATEDBY, LASTUPDATED, LASTUPDATEDBY, BONDID, BONDTYPE, SEQUENCENUMBER, FACEVALUE, CHEQUEDATE, CHEQUEREFERENCE, CHEQUEAMOUNT, CHEQUECLEARINGCHARGE, BONDISSUEDATE, TENURE, TENURETERM, TERMSINDAYS, INTERESTPAYMENTPERIOD, MATURITYDATE, AUCTION, OFFERRATE, COUPONRATE, BUYINGPRICE, COSTPRICE, PREMIUMPAID, TAXRATE, DISCOUNT, COMMISSION, HOLDINGINTERESTPAID, TOTALPURCHASEAMOUNT, TOTALCOMMISSIONGAIN, INTERESTMODE, GROSSINTEREST, SOURCETAX, EXCISEDUTY, OTHERCHARGE, COMPOUNDINTERESTTYPE, p4, ANNUALDAYS, STATUS, ACCEPTEDBY, ACCEPTEDDATE, REJECTEDBY, REJECTEDDATE, HOLDINGPERIOD, NETINTEREST, OPENINGDATE, REMARKS, Original_REFERENCE);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BONDTableAdapter _bONDTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BONDTableAdapter BONDTableAdapter {
            get {
                return this._bONDTableAdapter;
            }
            set {
                this._bONDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bONDTableAdapter != null) 
                            && (this._bONDTableAdapter.Connection != null))) {
                    return this._bONDTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bONDTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(TreasuryBondStatement dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bONDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BOND.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bONDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(TreasuryBondStatement dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bONDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BOND.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bONDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(TreasuryBondStatement dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._bONDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BOND.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bONDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(TreasuryBondStatement dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._bONDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bONDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bONDTableAdapter != null)) {
                    revertConnections.Add(this._bONDTableAdapter, this._bONDTableAdapter.Connection);
                    this._bONDTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._bONDTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._bONDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bONDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bONDTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bONDTableAdapter != null)) {
                    this._bONDTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._bONDTableAdapter]));
                    this._bONDTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591