@model InvestmentManagement.InvestmentManagement.Models.FIXEDDEPOSIT  



<div id="Replace">
    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
          @Session["currentPage"]
        </span>

    </div>
   <ol class="breadcrumb">
      @Html.Raw(@ViewBag.BreadCum)
    </ol>
<div class="wrapper pl">
    <div class="alert alert-success mt20">
        <button class="close" data-dismiss="alert" type="button">×</button>
         @ViewBag.Message
    </div>
    <div class="container-fluid">
 <img class="loadingImage" src="~/Images/loading.gif" style="display:none;" />
        <div class="widget col-md-5">
            <div class="whead">
                <h6>
                    <label id="lblHeader" title="">@ViewBag.Header</label>
                </h6>
                <div class="clear">
                </div>
            </div>
@using (Html.BeginForm("GenerateEncashedFDRReport", "FixedDepositRegister"))
{ @Html.Hidden("REFERENCE", @Model.REFERENCE)
            <div class="">
 <ul class="entryForm singleadd">
           <li class="form-group">
           
            <label class="control-label entrylable" for="INTERESTRECEIVED">Financial Institution</label>
			
        
        

            @Html.TextBoxFor(model => model.FINANCIALINSTITUTION.NAME,new {@class="form-control",@readonly = "readonly",@placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION.NAME)+"",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION.NAME)+"'"})
		
     <br />
	    @Html.ValidationMessageFor(model => model.FINANCIALINSTITUTION.NAME) 
       
	   </li>
           <li class="form-group">
           
            <label class="control-label entrylable" for="INTERESTRECEIVED">FDR No.</label>
			
        
        

            @Html.TextBoxFor(model => model.DEPOSITNUMBER,new {@class="form-control",@readonly = "readonly",@placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.DEPOSITNUMBER)+"",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.DEPOSITNUMBER)+"'"})
		
     <br />
	    @Html.ValidationMessageFor(model => model.DEPOSITNUMBER) 
       
	   </li>
      <li class="form-group">
           
            @Html.LabelFor(model => model.MRNO,new {@class="control-label entrylable"})
			
        
        

            @Html.TextBoxFor(model => model.MRNO,new {@class="form-control",@readonly="readonly",@placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.MRNO)+"",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.MRNO)+"'"})
		
     <br />
	    @Html.ValidationMessageFor(model => model.MRNO) 
       
	   </li>
      <li class="form-group">
           
            @Html.LabelFor(model => model.MRDATE,new {@class="control-label entrylable"})
			
        
        
            
                <div class='input-group date'>

            @*<input type="text" class="datepicker form-control" id="MRDATE" name="MRDATE" placeholder="Select date">
 <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>*@
                      @Html.TextBoxFor(model => model.MRDATE,"{0:dd-MMM-yy}", new { @class = "datepicker form-control",@readonly="readonly" })
                       
                    </div>
		
	     <br />
	    @Html.ValidationMessageFor(model => model.MRDATE) 
       
	   </li>
      <li class="form-group">
           
            @Html.LabelFor(model => model.ENCASHMENTDATE,new {@class="control-label entrylable"})
			
        
        
            
                <div class='input-group date'>

            @*<input type="text" class="datepicker form-control" id="ENCASHMENTDATE" name="ENCASHMENTDATE" placeholder="Select date">
 <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>*@
                    @Html.TextBoxFor(model => model.ENCASHMENTDATE,"{0:dd-MMM-yy}", new { @class = "datepicker form-control",@readonly="readonly" })
                       
                    </div>
		
	     <br />
	    @Html.ValidationMessageFor(model => model.ENCASHMENTDATE) 
       
	   </li>

          


      <li class="form-group">
           
            @Html.LabelFor(model => model.PRINCIPALAMOUNT,new {@class="control-label entrylable"})
			
        
        
            <div class="input-group">
            @Html.TextBoxFor(model => model.PRINCIPALAMOUNT,new { @class="form-control decimal",@readonly = "readonly", @placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.PRINCIPALAMOUNT)+" (Only Numeric)",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.PRINCIPALAMOUNT)+"'" })
		 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	    @Html.ValidationMessageFor(model => model.PRINCIPALAMOUNT) 
       
	   </li>

 <li class="form-group">
           
            @Html.LabelFor(model => model.GROSSINTEREST,new {@class="control-label entrylable"})
			
        
        
            <div class="input-group">
            @Html.TextBoxFor(model => model.GROSSINTEREST,new { @class="form-control decimal",@readonly = "readonly", @placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.GROSSINTEREST)+" (Only Numeric)",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.GROSSINTEREST)+"'" })
		 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	    @Html.ValidationMessageFor(model => model.GROSSINTEREST) 
       
	   </li>
      <li class="form-group">
           
            @Html.LabelFor(model => model.SOURCETAX,new {@class="control-label entrylable"})
			
        
        
            <div class="input-group">
            @Html.TextBoxFor(model => model.SOURCETAX,new { @class="form-control decimal",@readonly = "readonly", @placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.SOURCETAX)+" (Only Numeric)",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.SOURCETAX)+"'" })
		 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	    @Html.ValidationMessageFor(model => model.SOURCETAX) 
       
	   </li>
      <li class="form-group">
           
            @Html.LabelFor(model => model.EXCISEDUTY,new {@class="control-label entrylable"})
			
        
        
            <div class="input-group">
            @Html.TextBoxFor(model => model.EXCISEDUTY,new { @class="form-control decimal",@readonly = "readonly", @placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.EXCISEDUTY)+" (Only Numeric)",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.EXCISEDUTY)+"'" })
		 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	    @Html.ValidationMessageFor(model => model.EXCISEDUTY) 
       
	   </li>
      <li class="form-group">
           
           <label class="control-label entrylable" for="INTERESTRECEIVED">P.O charge & others</label>
			
        
        
            <div class="input-group">
            @Html.TextBoxFor(model => model.OTHERCHARGE,new { @class="form-control decimal",@readonly = "readonly", @placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.OTHERCHARGE)+" (Only Numeric)",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.OTHERCHARGE)+"'" })
		 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	    @Html.ValidationMessageFor(model => model.OTHERCHARGE) 
       
	   </li>
     <li class="form-group">
           
            <label class="control-label entrylable" for="INTERESTRECEIVED">Net Interest</label>
			
        
        
            <div class="input-group">
            @Html.TextBoxFor(model => model.NETINTERESTRECEIVABLE,new { @class="form-control decimal",@readonly = "readonly", @placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.NETINTERESTRECEIVABLE)+" (Only Numeric)",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.NETINTERESTRECEIVABLE)+"'" })
		 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	    @Html.ValidationMessageFor(model => model.NETINTERESTRECEIVABLE) 
       
	   </li>

      <li class="form-group">
           
            @Html.LabelFor(model => model.ACTUALINTERESTRECEIVED,new {@class="control-label entrylable"})		               
           <div class="input-group">
            @Html.TextBoxFor(model => model.ACTUALINTERESTRECEIVED,new { @class="form-control decimal",@readonly="readonly", @placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.ACTUALINTERESTRECEIVED)+" (Only Numeric)",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.ACTUALINTERESTRECEIVED)+"'" })
		 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	    @Html.ValidationMessageFor(model => model.ACTUALINTERESTRECEIVED) 
       
	   </li>

       <li class="form-group">
           
            @Html.Label("Difference (Net-Actual)",new {@class="control-label entrylable"})		                          
           <div class="input-group">
               <input type="text" value="@ViewBag.InterestDifference" class="form-control decimal" readonly="readonly" />             
           	 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	 
       
	   </li>

        <li class="form-group">
           
           <label class="control-label entrylable" for="INTERESTRECEIVED">Principal & (Interest/Actual Interest)</label>		
               
            <div class="input-group">
            @Html.TextBoxFor(model => model.TOTALAMOUNTRECEIVABLE,new { @class="form-control decimal",@readonly = "readonly", @placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.TOTALAMOUNTRECEIVABLE)+" (Only Numeric)",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.TOTALAMOUNTRECEIVABLE)+"'" })
		 <div class="input-group-addon">.00</div>
         </div>
	     <br />
	    @Html.ValidationMessageFor(model => model.TOTALAMOUNTRECEIVABLE) 
       
	   </li>

 
 

  
    
                        </ul>
             @*<button type="submit" class="btn btn-success btnSingleAddForm">Confirm</button>*@
                <input type="submit" class="btn btn-primary btnSingleAddForm" value="Print" style="margin-top:8px;" />
           
      
            </div>


}
                          @*@using (Html.BeginForm("GenerateEncashedFDRReport", "FixedDepositRegister", new { oFIXEDDEPOSIT = Model }))
                             {
                            
                           
                                 <input type="submit" class="btn btn-primary dgBtn" value="Print"  />
                               
                                
                           
                             }*@
        </div>


    </div>
</div>
    <p></p>


    <script type="text/javascript">
        function ShowProcessingMsg() {

            $('.loadingImage').show();

        }
        function HideProcessingMsg() {
            $('.loadingImage').hide();
        }

    </script>
<script>

    //$(function () {
    //    $('.datepicker').datepicker({ dateFormat: formatDate('long') });
       

    //});

</script>

<script>
    $(document).on('keypress', '.number', function (event) {

        if (event.keyCode == 46 || event.keyCode == 8) {
            // let it happen, don't do anything
        } else if ((event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }

    });
    $(document).on('keypress', '.decimal', function (event) {

        if (event.keyCode == 46 || event.keyCode == 8) {
            // let it happen, don't do anything
        } else if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }

    });


</script>
           <script type="text/javascript">
               $(".load").click(function () {
                   $(".loadingImage").show();
                   var link = $(this).attr("href");
                   debugger;
                   $.get('<%= Url.Action(' + link + ') %>', {},
                       function (data) {
                           $('#result').html(data);
                           $('.loadingImage').hide();
                       });
               });

    </script>
</div>

