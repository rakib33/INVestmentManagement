@model InvestmentManagement.Models.GridModel<InvestmentManagement.InvestmentManagement.Models.BOND>

<div id="replace">

    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
            @Session["currentPage"]
        </span>
    </div>
    <ol class="breadcrumb">
        @Html.Raw(@ViewBag.BreadCum)
    </ol>
    <div class="wrapper pl">
        <img class="loadingImage" src="~/Images/loading.gif" style="display: none;" />
        <div class="alert alert-success mt20">
            <button class="close" data-dismiss="alert" type="button">×</button>
            <strong>Info ! @Html.Raw(@ViewBag.Message)</strong>            
        </div>
        <div class="container-fluid Grid-Container">
            <div class="widget mb20">
                <div class="whead">
                    <h6>@Session["currentPage"]</h6>
                    <div class="clear"></div>
                </div>
                <div class="formRow dgHeaderBk">                   
                                        
                    <div class="container-fluid">

                         <div class="row">
                            <div class="col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label for="openingDate" class="col-sm-4 control-label">From Date</label>
                                    <div class="col-sm-8">                                       
                                        <input type="text" class="form-control datepicker datePickerWidth" id="fromdate" name="fromdate" placeholder="Select From Date">                                         
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="toDate" class="col-sm-4 control-label">To Date</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control datepicker datePickerWidth" id="toDate" name="toDate" placeholder="Select To Date">                                         
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="FdrNo" class="col-sm-4 control-label">Bond ISIN</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control datePickerWidth" id="BondNo" name="BondNo" placeholder="Insert ISIN">                                         
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6 col-sm-6">
                                 <div class="form-group">
                                    <label for="FdrNo" class="col-sm-4 control-label">Financial Institution</label>
                                    <div class="col-sm-8">
                                          @Html.DropDownList("FINANCIALINSTITUTION_REFERENCE", (SelectList)ViewBag.financialInstitutionList, "Select All", new { @class = "control-label entrylable drpResize"})                                       
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="FdrNo" class="col-sm-4 control-label">Status</label>
                                    <div class="col-sm-8">
                                         @Html.DropDownList("STATUS", (SelectList)ViewBag.statuslist, "Select All", new { @class = "control-label entrylable drpResize"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="FdrNo" class="col-sm-4 control-label"></label>
                                    <div class="col-sm-8">
                                         <input type="button" id="btn" class="btn btn-primary dgBtn" value="Apply" />
                                    </div>
                                </div>
                            </div>

                        </div>
                        
                         <div class="row">
                            <div class="col-md-4 col-sm-4">
                                <div class="form-group">
                                    <div class="col-sm-8">
                                        @if (Request.RawUrl.Contains("X-Requested-With=XMLHttpRequest") || Request.AcceptTypes.Contains("*/*"))
                                        {
                                            @Ajax.ActionLink("Add", "AddBond", "Bond", new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" }, new { @class = "btn btn-success m10" })
                                        }
                                        else
                                        {
                                            <a class=" load btn btn-success m10" role="menuitem" tabindex="-1" href="~/#/Bond/AddBond">Add</a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>


            <script>
                function ChkAddClass() {

                    var dir = $('#dir').val();
                    var col = $('#col').val().replace(/\s/g, '');
                    //alert(col);

                    var header = $('th a[href*=' + col + ']');
                    //alert(header.text());
                    var countTh = document.getElementsByTagName('th').length;


                    for (var i = 1; i <= countTh; i++) {

                        var txtTh = $('.ASPGrid tr th:nth-child(' + i + ')').text().replace(/\s/g, '');

                        if (txtTh.trim().toLowerCase() == col.toLowerCase() && dir.trim() == 'Ascending') {
                            //alert("");
                            //alert(txtTh + "" + col);
                            $(".ASPGrid tr th").addClass("sorting");

                            $('.ASPGrid tr th:nth-child(' + i + ')').addClass("ascending");
                            //$(".ASPGrid tr th:nth-child(1)").removeClass("sorting ascending");
                            $(".ASPGrid tr th:nth-child(12)").removeClass("sorting ascending");

                        }

                        else if (txtTh.trim().toLowerCase() == col.toLowerCase() && dir.trim() == 'Descending') {
                            //alert(txtTh + "" + col);
                            $(".ASPGrid tr th").addClass("sorting");

                            $('.ASPGrid tr th:nth-child(' + i + ')').addClass("descending");
                            // $(".ASPGrid tr th:nth-child(1)").removeClass("sorting descending");
                            $(".ASPGrid tr th:nth-child(12)").removeClass("sorting descending");

                        }
                    }

                }
            </script>


            <div id="WebGrid" class="formRow noPad btbNone tScroll">
                @{
                    WebGrid grid = new WebGrid(rowsPerPage: Model.RowsPerPage, ajaxUpdateContainerId: "WebGrid", ajaxUpdateCallback: "ChkAddClass", sortFieldName: "sortdefault");
                    grid.Bind(Model.DataModel, autoSortAndPage: false, rowCount: Model.RowsPerPage);
				
                    @grid.Table(columns: new[] {
           
                grid.Column(header: "Sl No",style:"textColumn", format: @<text><div>@(item.WebGrid.Rows.IndexOf(item) + 1)</div></text>),
                grid.Column("BONDID", style:"textColumn",header:"Bond ID"),
                grid.Column("FINANCIALINSTITUTION.NAME",format:@<text>@item.FINANCIALINSTITUTION.NAME</text>, style:"textColumn",header:"FI Name"),  
            
                grid.Column("ISSUEDATE", format: f=>f.BONDISSUEDATE.ToString("dd-MMM-yyyy"), style:"textColumn",header:"Issue Date"),
                grid.Column("OPENINGDATE", format: f=>f.BONDISSUEDATE.ToString("dd-MMM-yyyy"), style:"textColumn",header:"Opening Date"),
                grid.Column("MATURITYDATE", format: f=>f.MATURITYDATE.ToString("dd-MMM-yyyy"), style:"textColumn",header:"Matured Date"),
                grid.Column("TENURE",style:"textColumn",header:"Tenure"),
                grid.Column("TENURETERM",style:"textColumn",header:"Terms"),
                //grid.Column("AUCTION",style:"textColumn",header:"Auction"),
                grid.Column("FACEVALUE", format:@<text>@item.FACEVALUE.ToString("N") </text>, style:"numericColumn",header:"Face Value"),    
                grid.Column("COUPONRATE", style:"numericColumn",header:"Coupon Rate"),
                //grid.Column("OFFERRATE", style:"numericColumn",header:"Offer Rate"),
                grid.Column("BUYINGPRICE", format:@<text>@item.BUYINGPRICE.ToString("N") </text>, style:"numericColumn",header:"Buying Price"),
                grid.Column("COMMISSION", format:@<text>@item.COMMISSION.ToString("N") </text>, style:"numericColumn",header:"Commission"),
                grid.Column("DISCOUNT",format:@<text>@item.DISCOUNT.ToString("N") </text>, style:"numericColumn",header:"Discount"),
                grid.Column("PREMIUMPAID", format:@<text>@item.PREMIUMPAID.ToString("N") </text>, style:"numericColumn",header:"Premium"),
                
                grid.Column("HOLDINGPERIOD", format:@<text>@item.HOLDINGPERIOD.ToString("N") </text>,style:"numericColumn",header:"Holding Period"),
                
                grid.Column("HOLDINGINTERESTPAID", format:@<text>@item.HOLDINGINTERESTPAID.ToString("N") </text>, style:"numericColumn",header:"Holding Interest"),
                //grid.Column("TOTALPURCHASEAMOUNT", format:@<text>@item.TOTALPURCHASEAMOUNT.ToString("N") </text>, style:"numericColumn",header:"Purchase Amount"),
               
               grid.Column("NETINTEREST",format:@<text>@item.NETINTEREST.ToString("N") </text>, style:"numericColumn",header:"Net Interest"),
                    
                grid.Column("STATUS", style:"numericColumn",header:"Status"),
        

                  grid.Column(header: "",  format:@<text>
                    <div class="btn-group dropdown bdrNone">
                        <a href="#" class="tablectrl_medium bDefault" data-toggle="dropdown"><span class="iconb" data-icon=""></span></a>
                        <ul class="dropdown-menu pull-right cMbdr cMenu">


                              <li>
                                    <form style="margin-bottom: 0em !important;" action='@Url.Action("ProcurementLetter", "BOND", new { id = @item.REFERENCE })', method='post'>
                                        <input type="submit" class="btn btn-link load" style="font-size: 14px !important; font-weight: normal; color: #333 !important; text-decoration: none !important" value="Procurement Letter" />
                                    </form>
                                </li>
                            @if (item.STATUS == "Pending")
                            {
                     
                                <li>
                                    @if (Request.RawUrl.Contains("X-Requested-With=XMLHttpRequest") || Request.AcceptTypes.Contains("*/*"))
                                    {
  
                                        @Ajax.ActionLink("Edit", "EditBOND", "BOND", new { id = @item.REFERENCE },
                                        new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })
                                    }
                                    else
                                    {
                                        <a class="load" role="menuitem" tabindex="-1" href="~/#/BOND/EditBOND?id=@item.REFERENCE">Edit</a>
                                    }
                                </li>
                     
                     
                                <li>
                                    <a class="load" role="menuitem" tabindex="-1" href="~/#/BOND/ApprovedBond?id=@item.REFERENCE">Approve</a>
                                </li>                                
                                
                
                             }
                            else if (item.STATUS == "Approved" || item.STATUS == "Encashed")
                            {
                                // procurement Letter and Encashed menue
                              
                                 <li><a class="load" role="menuitem" href="~/#/Bond/ListInterestPaymentSchedule?reference=@item.REFERENCE&lblbreadcum=BOND Interest Details"><span class=" icon-redo"></span>Interest Details</a></li>

                                if (DateTime.Now > item.MATURITYDATE && item.STATUS == "Approved")
                                {
                                <li><a class="load" role="menuitem" tabindex="-1" href="~/#/BOND/EncashBond?id=@item.REFERENCE">Encash</a></li>
                                }
                            }

                            
                         

                        </ul>
                    </div>
                    </text>)
                },
                tableStyle: "ASPGrid",
                htmlAttributes: new { cellspacing = "0", border = "0" },

     footer: @<ul class="pagination">
     </ul>

                );
                    @Html.Hidden("dir", grid.SortDirection)
                    @Html.Hidden("col", grid.SortColumn)
                }
            </div>

        </div>
    </div>


    <script>

        $(function () {
            $('.datepicker').datepicker({ dateFormat: formatDate('long') });
        });

        var RemoveJQUIDatepicker = function () {
            $(".datePicker").datepicker("destroy");
            $(".datePicker").removeClass("hasDatePicker");
            $(".datePicker").removeAttr("Disabled");

            console.log('destroy');
        };

        var SetJQUIDatePicker = function () {
            $(".datepicker").datepicker({ dateFormat: formatDate('long') });
            jQuery.datepicker.dpDiv.appendTo(jQuery('body'));
            console.log('Set');
        }


        $(document).ready(function () {
            $(".ASPGrid tr th").addClass("sorting");

            $(".ASPGrid tr th:nth-child(12)").removeClass("sorting");

            $('.not-active').bind('click', false);
            $('#btn').on('click', function () {
                $('.loadingImage').show();

                //Destroy datepicker
                RemoveJQUIDatepicker();

                var filterstring = $('#txtCode').val();
                $.get("/BOND/ListBOND?fromdate=" + $('#fromdate').val() + "&toDate=" + $('#toDate').val() + "&FINANCIALINSTITUTION_REFERENCE=" + $('#FINANCIALINSTITUTION_REFERENCE').val() + "&STATUS=" + $("#STATUS").val() + "", function (data) {
                    var getHTML = $(data);
                    $('#WebGrid').empty();

                    $('#WebGrid').html($('#WebGrid', getHTML));
                    ChkAddClass();

                    SetJQUIDatePicker();  //set datepicker

                    $('.loadingImage').hide();
                });
            });

            $('#ddlPageSize').on('change', function () {
                //$('.loadingImage').show();
                var optionSelected = $("option:selected", this);
                var valueSelected = this.value;

                RemoveJQUIDatepicker();

                $.get("/BOND/ListBOND?sort=" + $('#col').val() + "&sortdir=" + $('#dir').val() + "&filterstring=" + $('#txtCode').val() + "&rows=" + valueSelected + "", function (data) {
                    var getHTML = $(data);
                    $('#WebGrid').empty();
                    $('#WebGrid').andSelf().unbind();
                    $('#WebGrid').html($('#WebGrid', getHTML));
                    ChkAddClass();
                    //$('.loadingImage').hide();

                    SetJQUIDatePicker();

                });
            });
        });

        $(function () {
            $('.datepicker').datepicker({ dateFormat: formatDate('long') });
        });

        function ShowProcessingMsg() {

            $('.loadingImage').show();

        }
        function HideProcessingMsg() {
            $('.loadingImage').hide();
        }
    </script>
</div>
