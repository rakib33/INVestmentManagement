@model InvestmentManagement.InvestmentManagement.Models.BOND




<div id="Replace">
    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
            @Session["currentPage"]
        </span>

    </div>
    <ol class="breadcrumb">
        @Html.Raw(@ViewBag.BreadCum)
    </ol>
    @*fixed Deposit markup*@

    <div class="wrapper pl">
        <img class="loadingImage" src="~/Images/loading.gif" style="display: none;" />
        <div id="FixedDeposit">
            <div class="alert alert-success mt20">
                <button class="close" data-dismiss="alert" type="button">×</button>
                @ViewBag.Message
            </div>
            @using (Ajax.BeginForm("EditBond", " Bond", new AjaxOptions { HttpMethod = "POST", InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace, UpdateTargetId = "Replace", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" }, new { autocomplete = "off" }))
            { 
                 @Html.Hidden("CREATEDBY", @Model.CREATEDBY)
                 @Html.Hidden("CREATEDDATE", @Model.CREATEDDATE)
                 @Html.Hidden("LASTUPDATED", @Model.LASTUPDATED)
                 @Html.Hidden("LASTUPDATEDBY", @Model.LASTUPDATEDBY)
                 @Html.Hidden("REFERENCE", @Model.REFERENCE) 
                 @Html.Hidden("STATUS", @Model.STATUS)
                <div id="BondInformation" class="container-fluid">

                    <div class="widget ">
                        <div class="whead">
                            <h6>
                                <label id="" title="">Treasury Bond Information</label>
                            </h6>
                            <div class="clear">
                            </div>
                        </div>

                        <div class="">


                            <ul class="col-md-6 entryForm bottomNonePadding">


                                <li class="form-group">

                                    @Html.LabelFor(model => model.BONDID, new { @class = "control-label entrylable" })




                                    @Html.TextBoxFor(model => model.BONDID, new { @class = "form-control", @value = Model.BONDID, style = "width: 50%", @placeholder = "" + @Html.DisplayNameFor(model => model.BONDID) + "", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.BONDID) + "'" })

                                    <br />
                                    @Html.ValidationMessageFor(model => model.BONDID)

                                </li>



                                @*<span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>*@
                                @*<li class="form-group">

                                    @Html.LabelFor(model => model.SEQUENCENUMBER, new { @class = "control-label entrylable" })




                                    <div class='input-group date'>

                                        @Html.TextBoxFor(model => model.SEQUENCENUMBER, new { @class = " form-control", @value = "Enter the Sequence Number", @placeholder = "Enter the Sequence Number", required = "required" })
                                        

                                    </div>

                                    <br />
                                    @Html.ValidationMessageFor(model => model.SEQUENCENUMBER)

                                </li>*@

                                <li class="form-group">

                                    @Html.LabelFor(model => model.BONDISSUEDATE, new { @class = "control-label entrylable" })




                                    <div class='input-group date'>

                                        @Html.TextBoxFor(model => model.BONDISSUEDATE,"{0:dd-MMM-yy}", new { @class = "datepicker form-control", @value = Model.BONDISSUEDATE, @placeholder = "Select a Date " })
                                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>

                                    </div>

                                    <br />
                                    @Html.ValidationMessageFor(model => model.BONDISSUEDATE)

                                </li>

                                <li class="form-group">

                                    @Html.LabelFor(model => model.CHEQUEREFERENCE, new { @class = "control-label entrylable" })




                                    @Html.TextBoxFor(model => model.CHEQUEREFERENCE, new { @class = "form-control", @value = Model.CHEQUEREFERENCE, style = "width: 50%", @placeholder = "" + @Html.DisplayNameFor(model => model.CHEQUEREFERENCE) + "", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.CHEQUEREFERENCE) + "'" })

                                    <br />
                                    @Html.ValidationMessageFor(model => model.CHEQUEREFERENCE)

                                </li>

                            </ul>

                            <ul class="col-md-6 entryForm bottomNonePadding">

                                <li class="form-group">

                                    @Html.LabelFor(model => model.SEQUENCENUMBER, new { @class = "control-label entrylable" })




                                    <div class='input-group date'>

                                        @Html.TextBoxFor(model => model.SEQUENCENUMBER, new { @class = " form-control", @value = Model.SEQUENCENUMBER, @placeholder = "Enter the Sequence Number", required = "required" })


                                    </div>

                                    <br />
                                    @Html.ValidationMessageFor(model => model.SEQUENCENUMBER)

                                </li>

                                @*<li class="form-group">
                          
                                 @Html.LabelFor(model => model.BONDTYPE, new { @class = "control-label entrylable" })
                          
                                 <br />
                                 @Html.DropDownListFor(model => model.BONDTYPE, (SelectList)ViewBag.bondTypeList,"Select a Bond Type", new { @class = "control-label entrylable drpResize drpsize" })*@
                                @*                                // @Html.DropDownListFor(model => model.BONDTYPE, (SelectList)ViewBag.bondTypeList, (string)ViewBag.BondTypeList, new { @class = "control-label entrylable drpResize drpsize" })*@


                                @*  //       "Select a Bond Type"   @Html.TextBoxFor(model => model.FINANCIALINSTITUTION_REFERENCE,new {@class="form-control",@placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION_REFERENCE)+"",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION_REFERENCE)+"'"})*@


                                @*  </li>*@

                                <li class="form-group">
                                    <label class="control-label entrylable">Issuing Bank</label>

                                    @*@Html.LabelFor(model => model.FINANCIALINSTITUTION_REFERENCE, new { @class = "control-label entrylable" })*@

                                    <br />
                                    @Html.DropDownListFor(model => model.FINANCIALINSTITUTION_REFERENCE, (SelectList)ViewBag.financialInstitutionList, (string)ViewBag.FinancialInstitutionName , new { @class = "control-label entrylable drpResize drpsize" })

                                    @*                                    @Html.DropDownListFor(model => model.FINANCIALINSTITUTION_REFERENCE, (SelectList)ViewBag.financialInstitutionList, (string)ViewBag.FinancialInstitution, new { @class = "control-label entrylable drpResize drpsize" })*@

                                    @*            @Html.TextBoxFor(model => model.FINANCIALINSTITUTION_REFERENCE,new {@class="form-control",@placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION_REFERENCE)+"",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION_REFERENCE)+"'"})*@


                                </li>


                                <li class="form-group">

                                    @* @Html.LabelFor(model => model.CHEQUEDATE, new { @class = "control-label entrylable" })*@
                                    <label class="control-label entrylable">Cheque Payment Date</label>



                                    <div class='input-group date'>

                                        @Html.TextBoxFor(model => model.CHEQUEDATE,"{0:dd-MMM-yy}", new { @class = "datepicker form-control", @value = Model.CHEQUEDATE, @placeholder = "Select a Date " })
                                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>

                                    </div>

                                    <br />
                                    @Html.ValidationMessageFor(model => model.CHEQUEDATE)

                                </li>

                            </ul>


                        </div>




                    </div>


                </div>
                <div id="FixedDepositTerms" class="container-fluid">

                    <div class="widget ">
                        <div class="whead">
                            <h6>
                                <label id="Label1" title="">Bond Terms </label>
                            </h6>
                            <div class="clear">
                            </div>
                        </div>

                        <div class="">


                            <ul class="col-md-6 entryForm bottomNonePadding">

                                <li class="form-group">

                                    @Html.LabelFor(model => model.FACEVALUE, new { @class = "control-label entrylable" })



                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.FACEVALUE, new { @class = "form-control decimal", @value =Model.FACEVALUE, @placeholder = "" + @Html.DisplayNameFor(model => model.FACEVALUE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.FACEVALUE) + "'" })
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.FACEVALUE)

                                </li>





                                <li class="form-group">

                                    <label class="control-label entrylable" for="INTERESTMODE">Interest Mode/Receivable</label>
                                    <br />

                                    @Html.DropDownListFor(model => model.INTERESTMODE, (SelectList)ViewBag.InterestMode,"Select Interest Mode", new { @class = "control-label entrylable drpResize drpsize", style = "width: 25% !important;" })
                                    @*                                    @Html.DropDownListFor(model => model.INTERESTMODE, (SelectList)ViewBag.InterestMode, (string)ViewBag.INTERESTMODE, new { @class = "control-label entrylable drpResize drpsize" })*@
                                    @Html.DropDownListFor(model => model.COMPOUNDINTERESTINTERVAL, (SelectList)ViewBag.CompoundInterestInterval,"Select Compound interest Interval", new { @class = "control-label entrylable drpResize drpsize", style = "width: 25% !important;" })


                                    <br />
                                    @Html.ValidationMessageFor(model => model.INTERESTMODE)

                                </li>
                                <li class="form-group">

                                    @Html.LabelFor(model => model.MATURITYDATE, new { @class = "control-label entrylable" })




                                    <div class='input-group date'>

                                        @Html.TextBoxFor(model => model.MATURITYDATE,"{0:dd-MMM-yy}", new { @class = "datepicker form-control", @value = Model.MATURITYDATE, @placeholder = "Select a Date " })
                                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>

                                    </div>

                                    <br />
                                    @Html.ValidationMessageFor(model => model.MATURITYDATE)

                                </li>
                                <li class="form-group" style="margin-bottom: 20px;">
                                    @Html.LabelFor(model => model.ANNUALDAYS, new { @class = "control-label entrylable" })

                                    <br />


                                    @Html.TextBoxFor(model => model.ANNUALDAYS, new { @class = "form-control number", @value = Model.ANNUALDAYS, style = "width: 20% !important; display:inline !important;", @type = "number", @placeholder = "" + @Html.DisplayNameFor(model => model.ANNUALDAYS) + "  (Only Numeric) ", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.ANNUALDAYS) + "'" })







                                    @*            @Html.TextBoxFor(model => model.FINANCIALINSTITUTION_REFERENCE,new {@class="form-control",@placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION_REFERENCE)+"",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION_REFERENCE)+"'"})*@

                                    <br />

                                </li>



                                @*<li class="form-group">

                                    @Html.LabelFor(model => model.BUYINGPRICE, new { @class = "control-label entrylable" })



                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.BUYINGPRICE, new { @class = "form-control decimal", @value = "Enter Buying Price", @placeholder = "" + @Html.DisplayNameFor(model => model.BUYINGPRICE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.BUYINGPRICE) + "'" })
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.BUYINGPRICE)

                                </li>*@

                                @*                                <li class="form-group checkbox" style="margin-top: 37px; margin-bottom: 20px;">

                                    <label>
                                        <input type="checkbox">
                                        Deduct Tax at each interval
                                    </label>


                                </li>*@

                            </ul>

                            <ul class="col-md-6 entryForm bottomNonePadding" style="height: 318px;">
                                <li class="form-group" style="margin-bottom: 20px;">

                                    <label class="control-label entrylable" for="OFFERRATE">Coupon Rate  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Offer Rate</label>


                                    <div class="row">
                                         <div class="col-md-3" style="width: 27% !important;">
                                            <div class="input-group" style="width: 100% !important; display: table !important;">
                                                @Html.TextBoxFor(model => model.COUPONRATE, new { @class = "form-control decimal", @value = Model.COUPONRATE, @placeholder = "" + @Html.DisplayNameFor(model => model.COUPONRATE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.COUPONRATE) + "'" })
                                                <div class="input-group-addon">.00</div>
                                            </div>
                                        </div>

                                        <div class="col-md-3" style="width: 27% !important;">
                                            <div class="input-group" style="width: 100% !important; display: table !important;">
                                                @Html.TextBoxFor(model => model.OFFERRATE, new { @class = "form-control decimal", @value = Model.OFFERRATE, @placeholder = "" + @Html.DisplayNameFor(model => model.OFFERRATE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.OFFERRATE) + "'" })
                                                <div class="input-group-addon">.00</div>
                                            </div>
                                        </div>
                                       
                                    </div>



                                </li>

                                <li class="form-group">
                                    @Html.LabelFor(model => model.TENURE, new { @class = "control-label entrylable" })

                                    <br />


                                    @Html.TextBoxFor(model => model.TENURE, new { @class = "form-control number", @value = Model.TENURE, style = "width: 20% !important; display:inline !important;", @type = "number", @placeholder = "" + @Html.DisplayNameFor(model => model.TENURE) + "  (Only Numeric) ", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.TENURE) + "'" })
                                    @Html.DropDownListFor(model => model.TENURETERM, (SelectList)ViewBag.TenureList, Model.TENURETERM, new { @class = "control-label entrylable drpResize drpsize", style = "height: 35px !important; margin-top:0px !important; width:30%;" })

                                    @*                                     @Html.DropDownListFor(model => model.TENURETERM, (SelectList)ViewBag.TenureList, (string)ViewBag.TENURETERM, new { @class = "control-label entrylable drpResize drpsize", style = "height: 35px !important; margin-top:0px !important; width:30%;" })*@




                                    @*            @Html.TextBoxFor(model => model.FINANCIALINSTITUTION_REFERENCE,new {@class="form-control",@placeholder="Please Enter Your "+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION_REFERENCE)+"",@onfocus="this.placeholder = ''", @onblur="this.placeholder = '"+@Html.DisplayNameFor(model => model.FINANCIALINSTITUTION_REFERENCE)+"'"})*@



                                </li>

                                <li class="form-group">

                                    @Html.LabelFor(model => model.BUYINGPRICE, new { @class = "control-label entrylable" })



                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.BUYINGPRICE, new { @class = "form-control decimal", @value = Model.BUYINGPRICE, @placeholder = "" + @Html.DisplayNameFor(model => model.BUYINGPRICE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.BUYINGPRICE) + "'" })
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.BUYINGPRICE)

                                </li>

                                @*<li class="form-group">

                                    @Html.LabelFor(model => model.COMPOUNDINTERESTINTERVAL, new { @class = "control-label entrylable" })

                                    <br />*@

                                @*                                    @Html.DropDownListFor(model => model.COMPOUNDINTERESTINTERVAL, (SelectList)ViewBag.ComoundInterestInterval, (string)ViewBag.COMPOUNDINTERESTINTERVAL, new { @class = "control-label entrylable drpResize drpsize" })*@


                                @*                                    <br />
                                    @Html.ValidationMessageFor(model => model.COMPOUNDINTERESTINTERVAL)

                                </li>*@

                                @* <li class="form-group">

                                    @Html.LabelFor(model => model.COUPONRATE, new { @class = "control-label entrylable" })



                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.COUPONRATE, new { @class = "form-control decimal", @value = "Enter a Coupon Rate", @placeholder = "" + @Html.DisplayNameFor(model => model.COUPONRATE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.COUPONRATE) + "'" })
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.COUPONRATE)

                                </li>*@





                                <input type="button" id="btn-PRIRCalc" class="btn btn-Primary " tabindex=""  value="Apply" style="margin-left: 261px; margin-top: 18px;" />

                            </ul>


                        </div>



                    </div>


                </div>
                <div id="InterestReceivable" class="container-fluid">

                    <div class="widget ">
                        <div class="whead">
                            <h6>
                                <label id="lblHeader" title="">Purchase Value and Interest Receivable</label>
                            </h6>
                            <div class="clear">
                            </div>
                        </div>


                        <div class="">


                            <ul class="col-md-6 entryForm bottomNonePadding">

                                <li class="form-group">

                                    @Html.LabelFor(model => model.COSTPRICE, new { @class = "control-label entrylable" })



                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.COSTPRICE, new { @class = "form-control decimal", @readonly = "readonly", @value = Model.COSTPRICE, @placeholder = "" + @Html.DisplayNameFor(model => model.COSTPRICE), @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.COSTPRICE) + "'" })
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.COSTPRICE)

                                </li>

                                <li class="form-group">

                                    @Html.LabelFor(model => model.PREMIUMPAID, new { @class = "control-label entrylable" })



                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.PREMIUMPAID, new { @class = "form-control decimal", @value = Model.PREMIUMPAID, @readonly = "readonly", @placeholder = "Premium Paid" })
                                        <div class="input-group-addon">.00</div>
                                        @*                                         @Html.TextBoxFor(model => model.PREMIUMPAID, new { @class = "form-control decimal", @value = "", @readonly = "readonly" })*@

                                        @*<div class="input-group-addon">%</div>*@
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.PREMIUMPAID)

                                </li>



                                <li class="form-group">

                                    @Html.LabelFor(model => model.TOTALPURCHASEAMOUNT, new { @class = "control-label entrylable" })


                                    <div class="input-group">
                                        <input id="TOTALPURCHASEAMOUNT" class="form-control decimal" style="width: 100%;" type="text" value="@Model.TOTALPURCHASEAMOUNT" placeholder="Total Purchase Amount" readonly name="TOTALPURCHASEAMOUNT" data-val-number="The field Excise Duty must be a number." data-val="true">
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    @*                                    <input id="Text1" class="form-control decimal" style="width: 50%;" type="text" value="@ViewBag.TOTALPURCHASEAMOUNT" name="TOTALPURCHASEAMOUNT" data-val-number="The field Excise Duty must be a number." data-val="true" readonly>*@


                                    <br />
                                    @Html.ValidationMessageFor(model => model.TOTALPURCHASEAMOUNT)

                                </li>

                                <li class="form-group">

                                    @Html.LabelFor(model => model.SOURCETAX, new { @class = "control-label entrylable" })


                                    <div class="input-group">
                                        <input id="SOURCETAX" class="form-control decimal" style="width: 100%;" type="text" placeholder="Source Tax" value="@Model.SOURCETAX" readonly name="SOURCETAX" data-val-number="The field Excise Duty must be a number." data-val="true">
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    @*                                     <input id="Text7" class="form-control decimal" style="width: 50%;" type="text" value="@ViewBag.SOURCETAX" name="SOURCETAX" data-val-number="The field Excise Duty must be a number." data-val="true" readonly>*@


                                    <br />
                                    @Html.ValidationMessageFor(model => model.SOURCETAX)

                                </li>


                                <li class="form-group">

                                    @Html.LabelFor(model => model.OTHERCHARGE, new { @class = "control-label entrylable" })


                                    <div class="input-group">
                                        <input id="OTHERCHARGE" class="form-control decimal" style="width: 100%;" type="text" placeholder="Other Charge" value="@Model.OTHERCHARGE" readonly name="OTHERCHARGE" data-val-number="The field Excise Duty must be a number." data-val="true">
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    @*                                    <input id="Text8" class="form-control decimal" style="width: 50%;" type="text" value="@ViewBag.OTHERCHARGE" name="EXCISEDUTY" data-val-number="The field Excise Duty must be a number." data-val="true" readonly>*@


                                    <br />
                                    @Html.ValidationMessageFor(model => model.OTHERCHARGE)

                                </li>





                            </ul>

                            <ul class="col-md-6 entryForm bottomNonePadding">

                                <li class="form-group">

                                    @Html.LabelFor(model => model.TOTALCOMMISSIONGAIN, new { @class = "control-label entrylable" })


                                    <div class="input-group">
                                        <input id="TOTALCOMMISSIONGAIN" class="form-control decimal" type="text" style="width: 100%;" value="@Model.TOTALCOMMISSIONGAIN" placeholder="Total Commission Gain " readonly name="TOTALCOMMISSIONGAIN" data-val-number="The field Other Charge must be a number." data-val="true">
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    @*                                    <input id="Text6" class="form-control decimal" type="text" style="width: 50%;" value="@ViewBag.TOTALCOMMISSIONGAIN" name="OTHERCHARGE" data-val-number="The field Other Charge must be a number." data-val="true" readonly>*@


                                    <br />
                                    @Html.ValidationMessageFor(model => model.TOTALCOMMISSIONGAIN)

                                </li>




                                <li class="form-group" style="margin-bottom: 20px;">

                                    <label class="control-label entrylable" for="OFFERRATE">Holding Period  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Holding Interest</label>


                                    <div class="row">
                                        <div class="col-md-3" style="width: 26% !important;">
                                            <div class="input-group" style="width: 100% !important; display: table !important;">
                                                @Html.TextBoxFor(model => model.HOLDINGPERIOD, new { @class = "form-control decimal", @value = Model.HOLDINGPERIOD, @readonly = "readonly", @placeholder = "" + @Html.DisplayNameFor(model => model.OFFERRATE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.OFFERRATE) + "'" })
                                                @*<div class="input-group-addon">.00</div>*@
                                            </div>
                                        </div>
                                        <div class="col-md-3" style="width: 27% !important;">
                                            <div class="input-group" style="width: 100% !important; display: table !important;">
                                                @Html.TextBoxFor(model => model.HOLDINGINTERESTPAID, new { @class = "form-control decimal", @value = Model.HOLDINGINTERESTPAID, @readonly = "readonly", @placeholder = "" + @Html.DisplayNameFor(model => model.COUPONRATE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.COUPONRATE) + "'" })
                                               @* <div class="input-group-addon">.00</div>*@
                                            </div>
                                        </div>
                                    </div>



                                </li>


                                @*<li class="form-group">

                                    @Html.LabelFor(model => model.HOLDINGINTERESTPAID, new { @class = "control-label entrylable" })


                                    <input type="hidden" value="" id="taxRate" />
                                   
                                     <div class="input-group">
                                    <input id="HOLDINGINTERESTPAID" class="form-control decimal" type="text" style="width: 100%;" placeholder="Source Tax" readonly name="SOURCETAX" data-val-number="The field Source Tax must be a number." data-val="true">
                                   <div class="input-group-addon">.00</div>
                                         </div>
                                                                          


                                    <br />
                                    @Html.ValidationMessageFor(model => model.HOLDINGINTERESTPAID)

                                </li>*@

                                <li class="form-group">

                                    @Html.LabelFor(model => model.GROSSINTEREST, new { @class = "control-label entrylable" })


                                    <div class="input-group">
                                        <input id="GROSSINTEREST" class="form-control decimal" style="width: 100%;" type="text" placeholder="Gross Interest" value="@Model.GROSSINTEREST" readonly name="GROSSINTEREST" data-val-number="The field Excise Duty must be a number." data-val="true">
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    @*                                    <input id="Text2" class="form-control decimal" style="width: 50%;" type="text" value="@ViewBag.EXCISEDUTY" name="EXCISEDUTY" data-val-number="The field Excise Duty must be a number." data-val="true" readonly>*@


                                    <br />
                                    @Html.ValidationMessageFor(model => model.GROSSINTEREST)

                                </li>

                                <li class="form-group">

                                    @Html.LabelFor(model => model.EXCISEDUTY, new { @class = "control-label entrylable" })


                                    <div class="input-group">
                                        <input id="EXCISEDUTY" class="form-control decimal" style="width: 100%;" type="text" placeholder="Excise Duty" value="@Model.EXCISEDUTY" name="EXCISEDUTY" readonly data-val-number="The field Excise Duty must be a number." data-val="true">
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    @* <input id="Text3" class="form-control decimal" style="width: 50%;" type="text" value="@ViewBag.EXCISEDUTY" name="EXCISEDUTY" data-val-number="The field Excise Duty must be a number." data-val="true" readonly>*@

                                    <br />
                                    @Html.ValidationMessageFor(model => model.EXCISEDUTY)

                                </li>


                                <li class="form-group">
                                    <label class="control-label entrylable" for="NETINTEREST">Net Interest</label>
                                    <div class="input-group">
                                        <input id="NETINTEREST" class="form-control decimal" style="width: 100%;" type="text" placeholder="Net Interest" value="@Model.NETINTEREST" readonly name="NETINTEREST" data-val-number="The field Net Interest must be a number." data-val="true">
                                        <div class="input-group-addon">.00</div>
                                    </div>
                                    @*                                    <input id="Text4" class="form-control decimal" style="width: 50%;" type="text" value="" name="NETINTERESTRECEIVABLE" data-val-number="The field Net Interest must be a number." data-val="true" readonly>*@

                                    <br>
                                </li>



                                @*   <li class="form-group">

                                    <label class="control-label entrylable" for="INTERESTRECEIVED">Total Amount Receivable</label>
                                    <input id="TOTALAMOUNTRECEIVABLE" class="form-control decimal" type="text" style="width: 50%;" value="" name="TOTALAMOUNTRECEIVABLE" data-val-number="The field Interest Received must be a number." data-val="true" readonly>
                                    <br />
                                </li>*@

                            </ul>


                        </div>



                    </div>


                </div>
                <div class="row">
                    <div class="col-md-offset-1" style="margin-left:151px;">
                    <button type="submit" class="btn btn-success" style="margin-left: 16px; margin-top: 13px;" tabindex="">Save</button>
                    <a class="load btn btn-danger" href="~/#/Bond/ListBond?lblbreadcum=" style="margin-top: 12px;">Close</a>
                        </div>
                </div>
            }
        </div>
    </div>

    @*End Fixed Deposit Markup*@
    <p></p>

    <script src="~/Scripts/pVIRCalculation.js"></script>
    <script src="~/Scripts/FormatNumber.js"></script>
    <script type="text/javascript">
        function ShowProcessingMsg() {

            $('.loadingImage').show();

        }
        function HideProcessingMsg() {
            $('.loadingImage').hide();
        }

    </script>
    <script>

        $(function () {
            //$('.datepicker').datepicker({ dateFormat: "dd/mm/yy" });
            $('.datepicker').datepicker({ dateFormat: formatDate('long') });
            //$(".dropdown-menu li a").click(function (event) {
            //var selText = $(this).text();
            //$('.hidden').val(selText);
            //$(this).parents('.btn-group').find('.dropdown-toggle').html(selText + ' <span class="caret"></span>');
            //event.preventDefault();
            //});

        });

    </script>

    <script>
        $(document).on('keypress', '.number', function (event) {

            if (event.keyCode == 46 || event.keyCode == 8) {
                // let it happen, don't do anything
            } else if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }

        });
        $(document).on('keypress', '.decimal', function (event) {

            if (event.keyCode == 46 || event.keyCode == 8) {
                // let it happen, don't do anything
            } else if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }

        });


    </script>

</div>

