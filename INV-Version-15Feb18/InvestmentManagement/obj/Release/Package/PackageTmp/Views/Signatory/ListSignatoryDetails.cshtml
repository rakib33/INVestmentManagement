
@model InvestmentManagement.Models.GridModel<InvestmentManagement.InvestmentManagement.Models.SIGNATORYDETAIL>


@{
    
    string AdminUser = "bosl";
    string RefSignatory = ViewBag.RefSinatory;
 }

<div id="replace">

    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
            @Session["currentPage"]
        </span>

    </div>
    <ol class="breadcrumb">
      @Html.Raw(@ViewBag.BreadCum)
    </ol>
 <div class="wrapper pl">      
        <div class="alert alert-success mt20">
            <button class="close" data-dismiss="alert" type="button">×</button>

            <strong>Info !</strong>
            @ViewBag.Message
        </div>
        <div class="container-fluid Grid-Container">
            <div class="widget mb20">
                <div class="whead">
                       <h6>@Session["currentPage"]</h6>
                     <select id="ddlPageSize">
                                
                                <option selected="selected">15</option>
                                <option>50</option>
                                <option>100</option>
                            </select>
                    <h6 style="float:right">Select Row Count</h6>
                     <div class="clear"></div>
                </div>

                <div class="formRow dgHeaderBk">
                    <div class="container-fluid">
                          <div class="col-md-12">
                            <input type="text" id="txtCode" class="tableSearchField" placeholder="Enter Name" />
                            <input type="button" id="btn" class="btn btn-primary dgBtn" value="Apply" />
                            
                            
                        </div>
                    </div>
                </div>

               <script>
                    function ChkAddClass() {
                        if ($('.ASPGrid').height() >= 700) {
                            $('#ApplicationUserWebGrid').addClass("webgridscroll");

                        }
                        var dir = $('#dir').val();
                        var col = $('#col').val().replace(/\s/g, '');
                       //alert(col);
                        
                        var header = $('th a[href*='+col+']');
                        //alert(header.text());
                        var countTh = document.getElementsByTagName('th').length;


                        for (var i = 1; i <= countTh; i++) {

                            var txtTh = $('.ASPGrid tr th:nth-child(' + i + ')').text().replace(/\s/g, '');
                            
                            if (txtTh.trim().toLowerCase() == col.toLowerCase() && dir.trim() == 'Ascending') {
                                //alert("");
                                //alert(txtTh + "" + col);
                                $(".ASPGrid tr th").addClass("sorting");

                                $('.ASPGrid tr th:nth-child(' + i + ')').addClass("ascending");
                               // $(".ASPGrid tr th:nth-child(1)").removeClass("sorting ascending");
                                 $(".ASPGrid tr th:nth-child(8)").removeClass("sorting ascending");

                            }

                            else if (txtTh.trim().toLowerCase() == col.toLowerCase() && dir.trim() == 'Descending') {
                                //alert(txtTh + "" + col);
                                $(".ASPGrid tr th").addClass("sorting");

                                $('.ASPGrid tr th:nth-child(' + i + ')').addClass("descending");
                               // $(".ASPGrid tr th:nth-child(1)").removeClass("sorting descending");
                                $(".ASPGrid tr th:nth-child(8)").removeClass("sorting descending");


                            }
                        }
                    }
                </script>
<div id="ApplicationUserWebGrid" class="formRow noPad btbNone tScroll">
            @{
                WebGrid grid = new WebGrid(null, rowsPerPage: 15, ajaxUpdateContainerId: "ApplicationUserWebGrid", ajaxUpdateCallback: "ChkAddClass");
                grid.Bind(Model.DataModel, rowCount: Model.RowsPerPage, autoSortAndPage: false);
				
                @grid.Table(columns: new[] {
             
                grid.Column("SIGNATORY.ReportName", style:"textColumn",header:"Report Name"),  
                grid.Column("SignatureLine1", style:"textColumn",header:"Signature Line1"),                 
                grid.Column("SignatureLine2", style:"textColumn",header:"Signature Line2"),   
                grid.Column("FromDate",format:@<text>@(@item.FromDate ==null?"":string.Format("{0:dd MMM yyyy}", item.FromDate ))</text>, style:"textColumn",header:"From Date"),  
                grid.Column("ToDate",format:@<text>@(@item.ToDate ==null?"":string.Format("{0:dd MMM yyyy}", item.ToDate ))</text>, style:"textColumn",header:"To Date"),                       
                grid.Column("ORDERINDEX", style:"textColumn",header:"Order Index"),                
                grid.Column("Status", style:"textColumn",header:"Status"), 
                grid.Column("TITLE", style:"textColumn",header:"Title"), 
                

                grid.Column(header: "",  format:@<text>
                        <div class="btn-group dropdown bdrNone">
                            <a href="#" class="tablectrl_medium bDefault" data-toggle="dropdown"><span class="iconb" data-icon=""></span></a>
                            <ul class="dropdown-menu pull-right cMbdr cMenu">                             
                                <li>
                                    @if (Request.RawUrl.Contains("X-Requested-With=XMLHttpRequest") || Request.AcceptTypes.Contains("*/*"))
                                    {
  
                                    @Ajax.ActionLink("Edit", "EditSignatoryDetails", "Signatory", new { id = @item.REFERENCE },

                                    new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET",OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })

                                    }
                                    else
                                    {
                                        <a class="load" role="menuitem" tabindex="-1" href="~/#/Signatory/EditSignatoryDetails?id=@item.REFERENCE">Edit</a>
                                    }
                                </li>

                            </ul>
                        </div>
                        </text>)
                },
                tableStyle: "ASPGrid",
                htmlAttributes: new { cellspacing = "0", border = "0" },

     footer: @<ul class="pagination">
   <li class="@ViewBag.Prev"><a class="@ViewBag.PrevNotActive" href="/Signatory/ListSignatoryDetails?PagingType=Prev&sort=@grid.SortColumn&currentFilter=@ViewBag.CurrentFilter&currentRowPerPage=@ViewBag.currentRowPerPage" data-swhglnk="true">Prev</a></li>
   <li class="@ViewBag.Next"><a class="@ViewBag.NextNotActive" href="/Signatory/ListSignatoryDetails?PagingType=Next&sort=@grid.SortColumn&currentFilter=@ViewBag.CurrentFilter&currentRowPerPage=@ViewBag.currentRowPerPage" data-swhglnk="true">Next</a></li>


     </ul>

                );
                        @Html.Hidden("dir", grid.SortDirection)
                        @Html.Hidden("col", grid.SortColumn)
                    }
                </div>

                  
                @if (Request.RawUrl.Contains("X-Requested-With=XMLHttpRequest") || Request.AcceptTypes.Contains("*/*"))
                {
                  @Ajax.ActionLink("Add", "AddSignatoryDetails", "Signatory",new{RefSinatory = RefSignatory},
                  new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" }, new { @class = "btn btn-success m10" })
                }
                else
                {
                    <a class=" load btn btn-success m10" role="menuitem" tabindex="-1" href="~/#/Signatory/AddSignatoryDetails?RefSinatory=@RefSignatory">Add</a>
                }
               
            </div>
            <div class="clear"></div>
        </div>
 </div>

</div>


<script type="text/javascript">
    $(document).ready(function () {
        if ($('.ASPGrid').height() >= 700) {
            $('#ApplicationUserWebGrid').addClass("webgridscroll");

        }
        $(".ASPGrid tr th").addClass("sorting");
        //$(".ASPGrid tr th:nth-child(1)").removeClass("sorting");
        $(".ASPGrid tr th:nth-child(8)").removeClass("sorting");

        $('.not-active').bind('click', false);
        $('#btn').on('click', function () {
            //$('.loadingImage').show();
            var filterstring = $('#txtCode').val();
            $.get("/Signatory/ListSignatoryDetails?filterstring=" + $('#txtCode').val() + "&rows=" + $("#ddlPageSize").val() + "", function (data) {
                var getHTML = $(data);
                $('#ApplicationUserWebGrid').empty();
                $('#ApplicationUserWebGrid').html($('#ApplicationUserWebGrid', getHTML));
                ChkAddClass();
                $('.loadingImage').hide();
            });
        });

        $('#ddlPageSize').on('change', function () {
            //$('.loadingImage').show();
            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;
            $.get("/Signatory/ListSignatoryDetails?rows=" + valueSelected + "", function (data) {
                var getHTML = $(data);
                $('#ApplicationUserWebGrid').empty();
                $('#ApplicationUserWebGrid').html($('#ApplicationUserWebGrid', getHTML));
                ChkAddClass();
                $('.loadingImage').hide();

            });
        });
    });

</script>


<script>

    var RemoveJQUIDatepicker = function () {
        $(".datePicker").datepicker("destroy");
        $(".datePicker").removeClass("hasDatePicker");
        $(".datePicker").removeAttr("Disabled");

        console.log('destroy');
    };

    var SetJQUIDatePicker = function () {
        $(".datepicker").datepicker({ dateFormat: formatDate('long') });
        jQuery.datepicker.dpDiv.appendTo(jQuery('body'));
        console.log('Set');
    }

    $(function () {
        //$('.datepicker').datepicker({ dateFormat: "dd/mm/yy" });
        $('.datepicker').datepicker({ dateFormat: formatDate('long') });

        RemoveJQUIDatepicker();
        SetJQUIDatePicker();

    });
    $(document).on('keypress', '.number', function (event) {

        if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9) {
            // let it happen, don't do anything
        } else if ((event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }
    });
    $(document).on('keypress', '.decimal', function (event) {

        if (event.keyCode == 46 || event.keyCode == 8 ||event.keyCode==9) {
            // let it happen, don't do anything
        } else if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }

    });
</script>

<script type="text/javascript">
    function ShowProcessingMsg() {

        $('.loadingImage').show();

    }
    function HideProcessingMsg() {
        $('.loadingImage').hide();
    }

</script>

    <script>

   
        $(document).on('click', '.dropdown-menu li a', function (event)
          {
                var selText = $(this).text();
                $('.hidden').val(selText);
                $(this).parents('.btn-group').find('.dropdown-toggle').html(selText + ' <span class="caret"></span>');
                event.preventDefault();
                //event.stopPropagation();
                //return false;
            });

     

</script>
