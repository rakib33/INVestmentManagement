@model InvestmentManagement.InvestmentManagement.Models.INVPARTICULARSDETAIL
@{
    TempData["ParticularRef"] = ViewBag.ParticularRef;  
 
    string Particularref = ViewBag.ParticularRef;  
 }

<div id="Replace">

    <script type="text/ecmascript">
        $(function () {
            $('.datepicker').datepicker({ dateFormat: formatDate('long') });
        });
    </script>

    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
            @Session["currentPage"]
        </span>

    </div>
    <ol class="breadcrumb">
        @Html.Raw(@ViewBag.BreadCum)
    </ol>
    @*fixed Deposit markup*@

    <div class="wrapper pl">
        <img class="loadingImage" src="~/Images/loading.gif" style="display: none;" />
        <div id="FixedDeposit">
            <div class="alert alert-success mt20">
                <button class="close" data-dismiss="alert" type="button">×</button>
                @ViewBag.Message
            </div>
        
            <div class="whead">
                <h6>
                    <label id="lblHeader" title="">@ViewBag.Header</label>
                </h6>
                <div class="clear">
                </div>
            </div>

            
          @using (Ajax.BeginForm("AddParticularsDetails", "InvParticulars", new AjaxOptions { HttpMethod = "POST", InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace, UpdateTargetId = "Replace", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" }, new { autocomplete = "off" }))
          {  
               @Html.HiddenFor(model => model.REFERENCE)
               @Html.Hidden("ParticularRef", new {Value=ViewBag.ParticularRef })

                <div id="BondInformation" class="container-fluid">

                    <div class="widget ">
                  
                        <div class="">                          
                            <ul class="col-md-6 entryForm bottomNonePadding">
                                
                              
                                 <li class="form-group">
                                    <label class="control-label entrylable">TRANSACTION DATE</label>
                                    <div class='input-group date'>
                                    @Html.TextBoxFor(model => model.TRANSACTIONDATE, "{0:dd-MMM-yy}", new { @class = "datepicker form-control", @value = ViewBag.transactionDate, @placeholder = "Select a Date ", required = "required" })
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                    </div>       
                                    <br />                             
                                    @Html.ValidationMessageFor(model => model.TRANSACTIONDATE)
                                </li>                                 
                                        

                                 <li class="form-group">
                                    <label class="control-label entrylable">AMOUNT</label>
                                    <div class="input-group">
                                    @Html.TextBoxFor(model => model.PRINCIPALAMOUNT, new { @class = "form-control decimal", required = "required"  })
                                    <div class="input-group-addon">.00</div>
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.PRINCIPALAMOUNT)
                                </li>
                                                                 
                             
                               @*  <li class="form-group">
                                    <label class="control-label entrylable">REMARKS </label>
                                    <div class="input-group">
                                        @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control" })
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.REMARKS)
                                </li>*@
                                                             
                             
                            </ul>
                         </div>

                    </div>

                </div>
                
                
                <div class="row">
                    <div class="col-md-offset-1" style="margin-left: 151px;">
                       
                        <button type="submit" class="btn btn-success btnSingleAddForm">Save</button>
                 
                        <a class="load btn btn-danger closeButton" href="~/#/InvParticulars/ListParticularsDetails?ParticularRef=@ViewBag.ParticularRef">Close</a>
                        
                    </div>
                    
                </div>
          }
        </div>
    </div>

    <script type="text/javascript">
        function ShowProcessingMsg() {

            $('.loadingImage').show();

        }
        function HideProcessingMsg() {
            $('.loadingImage').hide();
        }

    </script>
    <script>

        var RemoveJQUIDatepicker = function () {
            $(".datePicker").datepicker("destroy");
            $(".datePicker").removeClass("hasDatePicker");
            $(".datePicker").removeAttr("Disabled");

            console.log('destroy');
        };

        var SetJQUIDatePicker = function () {
            $(".datepicker").datepicker({ dateFormat: formatDate('long') });
            jQuery.datepicker.dpDiv.appendTo(jQuery('body'));
            console.log('Set');
        }     

        $(function () {
            //$('.datepicker').datepicker({ dateFormat: "dd/mm/yy" });
            $('.datepicker').datepicker({ dateFormat: formatDate('long') });
           
            RemoveJQUIDatepicker();
            SetJQUIDatePicker();
           
        });       

        $(document).on('keypress', '.number', function (event) {

            if (event.keyCode == 46 || event.keyCode == 8) {
                // let it happen, don't do anything
            } else if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }

        });
        $(document).on('keypress', '.decimal', function (event) {

            if (event.keyCode == 46 || event.keyCode == 8) {
                // let it happen, don't do anything
            } else if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }

        });


    </script>

</div>

