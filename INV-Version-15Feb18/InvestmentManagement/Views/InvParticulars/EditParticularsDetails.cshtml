
@model InvestmentManagement.InvestmentManagement.Models.INVPARTICULARSDETAIL

@{
    TempData["ParticularRef"] = ViewBag.ParticularRef;  
 
    string Particularref = ViewBag.ParticularRef;  
 }


<div id="Replace">

    <script type="text/ecmascript">
        $(function () {
            $('.datepicker').datepicker({ dateFormat: formatDate('long') });
        });
    </script>

    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
            @Session["currentPage"]
        </span>

    </div>
    <ol class="breadcrumb">
        @Html.Raw(@ViewBag.BreadCum)
    </ol>
    @*fixed Deposit markup*@

    <div class="wrapper pl">
        <img class="loadingImage" src="~/Images/loading.gif" style="display: none;" />
        <div id="FixedDeposit">
            <div class="alert alert-success mt20">
                <button class="close" data-dismiss="alert" type="button">×</button>
                @ViewBag.Message
            </div>
        
            <div class="whead">
                <h6>
                    <label id="lblHeader" title="">@ViewBag.Header</label>
                </h6>
                <div class="clear">
                </div>
            </div>

            
          @using (Ajax.BeginForm("EditParticularsDetails", "InvParticulars", new AjaxOptions { HttpMethod = "POST", InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace, UpdateTargetId = "Replace", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" }, new { autocomplete = "off" }))
          {
  
               @Html.HiddenFor(model => model.REFERENCE)
               @Html.Hidden("ParticularRef", new {Value=ViewBag.ParticularRef })
              
           
                <div id="BondInformation" class="container-fluid">

                    <div class="widget ">
                        <div class="whead">
                            <h6>
                                <label id="" title="">Edit Particulars Details</label>
                            </h6>
                            <div class="clear">
                            </div>
                        </div>

                        <div class="">

                            <ul class="col-md-6 entryForm bottomNonePadding">
                               
                                 <li class="form-group">
                                    <label class="control-label entrylable">TRANSACTION DATE</label>
                                    <div class='input-group date'>
                                    @Html.TextBoxFor(model => model.TRANSACTIONDATE, "{0:dd-MMM-yy}", new { @class = "datepicker form-control", @value = ViewBag.transactionDate, @placeholder = "Select a Date ", required = "required" })
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                    </div>       
                                    <br />                             
                                    @Html.ValidationMessageFor(model => model.TRANSACTIONDATE)
                                </li>                                 
                                        

                                 <li class="form-group">
                                    <label class="control-label entrylable">AMOUNT</label>
                                    <div class="input-group">
                                    @Html.TextBoxFor(model => model.PRINCIPALAMOUNT, new { @class = "form-control decimal", required = "required"  })
                                    <div class="input-group-addon">.00</div>
                                    </div>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.PRINCIPALAMOUNT)
                                </li>

                              
                            </ul>
                         </div>

                    </div>

                </div>
                
                
                <div class="row">
                    <div class="col-md-offset-1" style="margin-left: 151px;">
                       
                        <button type="submit" class="btn btn-success btnSingleAddForm">Save</button>                 
                       
                       <a class="load btn btn-danger closeButton" href="~/#/InvParticulars/ListParticularsDetails?ParticularRef=@ViewBag.ParticularRef">Close</a>
                        
                        
                    </div>
                    
                </div>
          }
        </div>
    </div>

    <script type="text/javascript">
        function ShowProcessingMsg() {

            $('.loadingImage').show();

        }
        function HideProcessingMsg() {
            $('.loadingImage').hide();
        }

    </script>
    <script>

        var RemoveJQUIDatepicker = function () {
            $(".datePicker").datepicker("destroy");
            $(".datePicker").removeClass("hasDatePicker");
            $(".datePicker").removeAttr("Disabled");

            console.log('destroy');
        };

        var SetJQUIDatePicker = function () {
            $(".datepicker").datepicker({ dateFormat: formatDate('long') });
            jQuery.datepicker.dpDiv.appendTo(jQuery('body'));
            console.log('Set');
        }     

        $(function () {
            //$('.datepicker').datepicker({ dateFormat: "dd/mm/yy" });
            $('.datepicker').datepicker({ dateFormat: formatDate('long') });
           
            RemoveJQUIDatepicker();
            SetJQUIDatePicker();
           
        });

        $("#Calculate").click(function () {
            var instrument = $("#INSTRUMENTACREF").val();
            var transactionType = $("#TRANSACTIONTYPE").val();
            var Qty = $("#SHAREQTY").val();
            var entryDate = $("#ENTRYDATE").val();
            var IsChecked = "";
           // alert('instrument' + instrument + ' tran type ' + transactionType + ' Qty=' + Qty + ' Date:' + entryDate);
            var flag = 1;

            if (instrument == '' || instrument == null) {
                alert('Select a Instrument');
                flag = 0;
                return false;
            }
            if (transactionType === '' || transactionType === null) {
                alert('Select Transaction Type Buy Order/Sell Order.');
                flag = 0;
                return false;
            }
            if (Qty < 1) {
                alert('Insert a Share Quantity.');
                flag = 0;
                return false;
            }
            if (entryDate === '' || entryDate === null) {
                alert('Select a Entry Date.');
                flag = 0;
                return false;
            }
            if (flag == 1) {
                console.log('before');

                if ($("#forgot").prop('checked') == true) {
                    IsChecked = "true";
                } else {
                    IsChecked = "";
                }


                $.ajax({

                    type: 'GET',
                    url: '@Url.Action("TradeOrderCalculate", "ScriptTransfer")',

                    data: {
                        instrumentRef: instrument,
                        Qty: Qty,
                        tranType: transactionType,
                        Date: entryDate,
                        forgot: IsChecked
                    },
                    dataType: "json",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8", // this is the default value, so it's optional

                    success: function (result) {
                        
                        if (result.message == "1") {
                            $("#RATE").val(result.MarketPrice);
                            $("#TOTAL").val(result.Total);
                            $('#ISFORGOTTRADEORDER').val(result.MissingBusinessDate);
                        }
                        else {
                            alert(result.message);
                        }
                    },

                    error: function (jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.Try again.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404].Try again.';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].Try again.';
                        } else if (jqXHR.status === 504) {
                            msg = 'Gate way Time out problem.Try again';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.Try Again.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.Try Again';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.Try Again.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        alert("Error:" + msg);
                    }

                });
            }
        });     

        $(document).on('keypress', '.number', function (event) {

            if (event.keyCode == 46 || event.keyCode == 8) {
                // let it happen, don't do anything
            } else if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }

        });
        $(document).on('keypress', '.decimal', function (event) {

            if (event.keyCode == 46 || event.keyCode == 8) {
                // let it happen, don't do anything
            } else if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }

        });


    </script>

</div>

