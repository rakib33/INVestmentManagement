@model InvestmentManagement.Models.GridModel<InvestmentManagement.InvestmentManagement.Models.FIXEDDEPOSIT>

<div id="replace">

    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
            @Session["currentPage"]
        </span>

    </div>
    <ol class="breadcrumb">
        @Html.Raw(@ViewBag.BreadCum)
    </ol>
    <div class="wrapper pl">
        <img class="loadingImage" src="~/Images/loading.gif" style="display: none;" />
        <div class="alert alert-success mt20">
            <button class="close" data-dismiss="alert" type="button">×</button>

            <strong>Info !</strong>

            @if (ViewBag.emptynumber == 1)
            {
                <span style="color:red">@ViewBag.Message</span> 
            }else
            {
            @ViewBag.Message
            }

           <strong>Integration Info ! @Html.Raw(@ViewBag.Info)</strong>       
        </div>
        <div class="container-fluid Grid-Container">

            <div class="widget mb20">
                <div class="whead">
                    <h6>@Session["currentPage"]</h6>
                   
                    <div class="clear"></div>
                </div>

                <div class="formRow dgHeaderBk">
                    <div class="container-fluid">

                             <div class="row">
                            <div class="col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label for="openingDate" class="col-sm-4 control-label">From Date</label>
                                    <div class="col-sm-8">                                       
                                        <input type="text" class="form-control datepicker datePickerWidth" id="fromdate" name="fromdate" placeholder="Select From Date">                                         
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="toDate" class="col-sm-4 control-label">To Date</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control datepicker datePickerWidth" id="toDate" name="toDate" placeholder="Select To Date">                                         
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="FdrNo" class="col-sm-4 control-label">Deposit No</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control datePickerWidth" id="FdrNo" name="FdrNo" placeholder="Insert Deposit No">                                         
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6 col-sm-6">
                                 <div class="form-group">
                                    <label for="FdrNo" class="col-sm-4 control-label">Financial Institution</label>
                                    <div class="col-sm-8">
                                          @Html.DropDownList("FINANCIALINSTITUTION_REFERENCE", (SelectList)ViewBag.financialInstitutionList, "Select All", new { @class = "control-label entrylable drpResize"})                                       
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="FdrNo" class="col-sm-4 control-label">Status</label>
                                    <div class="col-sm-8">
                                         @Html.DropDownList("STATUS", (SelectList)ViewBag.statuslist, "Select All", new { @class = "control-label entrylable drpResize"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="FdrNo" class="col-sm-4 control-label"></label>
                                    <div class="col-sm-8">
                                        <input type="button" id="btn" class="btn btn-primary dgBtn" value="Apply" onclick="GetDepositData()" />
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <script>
                    function ChkAddClass() {
                        if ($('.ASPGrid').height() >= 700) {
                            $('#FixedDepositWebGrid').addClass("webgridscroll");

                        }

                        if ($('.ASPGrid').width() >= 1330) {
                            $('#FixedDepositWebGrid').addClass("webgridHorizontalscroll");

                        }
                        var dir = $('#dir').val();
                        var col = $('#col').val().replace(/\s/g, '');
                        //alert(col);

                        var header = $('th a[href*=' + col + ']');
                        //alert(header.text());
                        var countTh = document.getElementsByTagName('th').length;


                        for (var i = 1; i <= countTh; i++) {

                            var txtTh = $('.ASPGrid tr th:nth-child(' + i + ')').text().replace(/\s/g, '');

                            if (txtTh.trim().toLowerCase() == col.toLowerCase() && dir.trim() == 'Ascending') {
                                //alert("");
                                //alert(txtTh + "" + col);
                                $(".ASPGrid tr th").addClass("sorting");

                                $('.ASPGrid tr th:nth-child(' + i + ')').addClass("ascending");
                                //$(".ASPGrid tr th:nth-child(1)").removeClass("sorting ascending");
                                $(".ASPGrid tr th:nth-child(10)").removeClass("sorting ascending");

                            }

                            else if (txtTh.trim().toLowerCase() == col.toLowerCase() && dir.trim() == 'Descending') {
                                //alert(txtTh + "" + col);
                                $(".ASPGrid tr th").addClass("sorting");

                                $('.ASPGrid tr th:nth-child(' + i + ')').addClass("descending");
                                //$(".ASPGrid tr th:nth-child(1)").removeClass("sorting descending");
                                $(".ASPGrid tr th:nth-child(10)").removeClass("sorting descending");


                            }
                        }

                        //change date time picker so that clicking Apply btn picker work 

                        $(".datePicker").datepicker("destroy");
                        $(".datePicker").removeClass("hasDatePicker");
                        $(".datePicker").removeAttr("Disabled");
                        $(".datepicker").datepicker({ dateFormat: formatDate('long') });
                        jQuery.datepicker.dpDiv.appendTo(jQuery('body'));


                        //$("select,.check :checkbox").not("#ddlPageSize").uniform();

                        //$('.selector').not("#ddlPageSize").addClass('pull-right');
                        //$('.checker').not("#ddlPageSize").addClass('dataGridCheckBox');
                    }
                </script>
                <div id="FixedDepositWebGrid" class="formRow noPad btbNone tScroll">
                    @{
                        WebGrid grid = new WebGrid(rowsPerPage: Model.RowsPerPage, ajaxUpdateContainerId: "FixedDepositWebGrid", ajaxUpdateCallback: "ChkAddClass", sortFieldName: "sort");
                        grid.Bind(Model.DataModel, autoSortAndPage: false, rowCount: Model.RowsPerPage);
				
                        @grid.Table(columns: new[] {               


                
        grid.Column(header: "Sl No",style:"textColumn", format: @<text><div>@(item.WebGrid.Rows.IndexOf(item) + 1)</div></text>),

        //grid.Column("CREATEDDATE",format:@<text>@(@item.CREATEDDATE==null?"":string.Format("{0:dd MMM yyyy}", item.CREATEDDATE))</text>, style:"textColumn",header:"Create Date"), 

        grid.Column("DEPOSITNUMBER",format:@<text>@item.DEPOSITNUMBER</text>, style:"textColumn",header:"Deposit No"),      
       
        grid.Column("RENEWALDEPOSITNUMBER",format:@<text>@item.RENEWALDEPOSITNUMBER</text>, style:"textColumn",header:"Re-deposit No "),
      
        grid.Column("FINANCIALINSTITUTION.NAME",format:@<text>@item.FINANCIALINSTITUTION.NAME</text>, style:"textColumn",header:"Financial Institution"),  

        grid.Column("FIBRANCH.NAME",format:@<text>@item.FIBRANCH.NAME</text>, style:"textColumn",header:"Branch"), 

        grid.Column("MATURITYDATE",format:@<text>@(@item.MATURITYDATE==null?"":string.Format("{0:dd MMM yyyy}", item.MATURITYDATE))</text>,style:"textColumn",header:"Matured Date"), 
                
        grid.Column("OPENINGDATE",format:@<text>@(@item.OPENINGDATE==null?"":string.Format("{0:dd MMM yyyy}", item.OPENINGDATE))</text>, style:"textColumn",header:"Opening Date"),  

        grid.Column("PRINCIPALAMOUNT", format:@<text>@item.PRINCIPALAMOUNT.ToString("N")</text>, style:"numericColumn",header:"Principal Amount"),  

        grid.Column("TENURE", format:@<text>@item.TENURE</text>,header:"Tenure"),                                         

        grid.Column("TENURETERM", style:"textColumn",header:"Tenure Term"),

        grid.Column("INTERESTMODE", style:"textColumn",header:"Interest Mode"),

        grid.Column("COMPOUNDINTERESTINTERVAL",format:@<text>@(@item.INTERESTMODE=="Compound"?item.COMPOUNDINTERESTINTERVAL:"")</text>, style:"textColumn",header:"Interest Interval"),

        grid.Column("ANNUALDAYS", style:"textColumn",header:"Annual Days"),

        grid.Column("RATEOFINTEREST", format:@<text>@item.RATEOFINTEREST.ToString("N")</text>, style:"numericColumn",header:"Rate of Interest"),

        grid.Column("EXISTINGCAPLIMIT", format:@<text>@item.EXISTINGCAPLIMIT.ToString("N")</text>, style:"numericColumn",header:"Existing Cap Limit"),
                
        grid.Column("STATUS", format:@<text>@item.STATUS</text>, style:"numericColumn",header:"Status"),  
                            
        grid.Column("POSTGL_STATUS", format:@<text>@item.STATUS</text>, style:"textColumn",header:"GL Status"),      
                    

  grid.Column(header: "",  format:@<text>
                        <div class="btn-group dropdown bdrNone">
                            <a href="#" class="tablectrl_medium bDefault" data-toggle="dropdown"><span class="iconb" data-icon=""></span></a>
                            <ul class="dropdown-menu pull-right cMbdr cMenu">
                                <li>
                                    @if (Request.RawUrl.Contains("X-Requested-With=XMLHttpRequest") || Request.AcceptTypes.Contains("*/*"))
                                    {
                                   @Ajax.ActionLink("Edit", "EditFixedDeposit", "FixedDeposit", new { id = @item.REFERENCE },
                                   new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })
                                    }
                                    else
                                    {
                                        //added by  rakibul Edit option only displayed if and only if status==Pending                     
                                        if (item.STATUS == "Pending")
                                        {                   
                                        @Ajax.ActionLink("Edit", "EditFixedDeposit", "FixedDeposit", new { id = @item.REFERENCE },
                                        new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })
                  
                                        }
                                    }
                                </li>


                                @*Edited By Hemel on 8-jul-15 for Approve and Reject menu re Editing by rakibul 1/25/16
                                 if deposit number empty approved menu does not show and if status is approved edit does not show 
                                
                                  if status Approved Reject Menue does not display
                                 if INTERESTMODE=Compound then display InterestBreakDown menue
                                *@
                                @if (item.INTERESTMODE == "Compound")
                                {
                                    <li>
                                     @Ajax.ActionLink("Interest Break Down", "FixedDepositInterestBreakDown", "FixedDeposit", new { id = @item.REFERENCE },
                                     new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })                                     
                                    </li>
                                }

                                @if (item.DEPOSITNUMBER != null && !string.IsNullOrEmpty(item.DEPOSITNUMBER))
                                {
                                    if (item.STATUS == "Pending")
                                    {
                                    <li>

                                        @Ajax.ActionLink("Approve", "ApproveFixedDeposit", "FixedDeposit", new { id = @item.REFERENCE },
                                        new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })

                                        @*    <a class="load" role="menuitem" tabindex="-5" href="~/#/FixedDeposit/ApproveFixedDeposit?id=@item.REFERENCE">Approve</a>*@

                                    </li>
                                     }

                                     <li>
                                @* @if (item.POSTGL_STATUS == null && item.POSTGL_FROM ==null)
                                        {  *@                 
                                        @Ajax.ActionLink("Post To GL", "IntegrationOperation", "OracleIntegration", new {Code ="NewFDR" ,id = @item.REFERENCE },
                                        new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })
                   
                                     @*   } *@
                                </li>


                                 }

                                @if (item.STATUS == "Pending")
                                { 
                                    <li>

                                        @Ajax.ActionLink("Reject", "RejectFixedDeposit", "FixedDeposit", new { id = @item.REFERENCE },
                                        new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })

                                        @* <a class="load" role="menuitem" tabindex="-5" href="~/#/FixedDeposit/RejectFixedDeposit?id=@item.REFERENCE">Reject</a>*@
                                    </li>
                                 }

                              
                            </ul>
                        </div>
                        </text>)
                },
                         tableStyle: "ASPGrid",
                         htmlAttributes: new { cellspacing = "0", border = "0" },

              footer: @<ul class="pagination">
     </ul>

                         );
                        @Html.Hidden("dir", grid.SortDirection)
                        @Html.Hidden("col", grid.SortColumn)
                    }
                </div>            

            </div>
            <div class="clear"></div>
        </div>

    </div>
    <script type="text/javascript">
        function GetDepositData()
        {
            $('.loadingImage').show();

            try{
                var filterstring = $('#txtCode').val();
               // alert('hitted2');
                $.ajax({
                    url: '@Url.Action("ListFixedDeposit","FixedDeposit")',
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html',
                    data: {
                        fromdate: $('#fromdate').val(),
                        toDate : $('#toDate').val(),
                        FdrNo : $('#FdrNo').val(),
                        FINANCIALINSTITUTION_REFERENCE: $("#FINANCIALINSTITUTION_REFERENCE").val(),
                        STATUS: $("#STATUS").val()                   
                    },
                }).success(function (result) {
                    console.log('success');
                    var getHTML = $(result);
                    $('#FixedDepositWebGrid').empty();

                    $('#FixedDepositWebGrid').html($('#FixedDepositWebGrid', getHTML));
                    ChkAddClass();
                    $('.loadingImage').hide();                
                    console.log('complete');

                }).error(function (xhr, status) {
                    // console.log('error\n :'+xhr.responseText)
                    console.log(xhr.error);
                    //hide the loading image
                    $('.loadingImage').hide();                

                });
            } catch (err)
            {
                console.log(err.message);
            }
        }
</script>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        if ($('.ASPGrid').height() >= 700) {
            $('#FixedDepositWebGrid').addClass("webgridscroll");
        }

        if ($('.ASPGrid').width() >= 1330) {
            $('#FixedDepositWebGrid').addClass("webgridHorizontalscroll");

        }
        $(".ASPGrid tr th").addClass("sorting");
        // $(".ASPGrid tr th:nth-child(1)").removeClass("sorting");
        $(".ASPGrid tr th:nth-child(10)").removeClass("sorting");

        $('.not-active').bind('click', false);
        $('#btn').on('click', function () {

         //   console.log('hited');
            //$('.loadingImage').show();

            //try{
            //    var filterstring = $('#txtCode').val();
            //    $.get("/FixedDeposit/ListFixedDeposit?openingDate=" + $('#openingDate').val() + "&FINANCIALINSTITUTION_REFERENCE=" + $("#FINANCIALINSTITUTION_REFERENCE").val() + "&STATUS=" + $("#STATUS").val() + "", function (data) {
            //        var getHTML = $(data);
            //        $('#FixedDepositWebGrid').empty();

            //        $('#FixedDepositWebGrid').html($('#FixedDepositWebGrid', getHTML));
            //        ChkAddClass();
            //        $('.loadingImage').hide();
            //    });
            //}
            //catch (err)
            //{
            //    console.log(err.message);
            //}
        });

        $('#ddlPageSize').on('change', function () {
            $('.loadingImage').show();
            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;
            $.get("/FixedDeposit/ListFixedDeposit?sort=" + $('#col').val() + "&sortdir=" + $('#dir').val() + "&filterstring=" + $('#txtCode').val() + "&rows=" + valueSelected + "", function (data) {
                var getHTML = $(data);
                $('#FixedDepositWebGrid').empty();
                $('#FixedDepositWebGrid').andSelf().unbind();
                $('#FixedDepositWebGrid').html($('#FixedDepositWebGrid', getHTML));
                ChkAddClass();
                $('.loadingImage').hide();

            });
        });
    });

</script>

<script type="text/javascript">
    function ShowProcessingMsg() {

        $('.loadingImage').show();

    }
    function HideProcessingMsg() {
        $('.loadingImage').hide();
    }

</script>

<script>

$(function () {
  $('.datepicker').datepicker({ dateFormat: formatDate('long') });
});
    
</script>

