@model InvestmentManagement.InvestmentManagement.Models.FDRENCASHMENT




<div id="Replace">
    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
            @Session["currentPage"]
        </span>

    </div>
    <ol class="breadcrumb">
        @Html.Raw(@ViewBag.BreadCum)
    </ol>
    <div class="wrapper pl">
        <div class="alert alert-success mt20">
            <button class="close" data-dismiss="alert" type="button">×</button>
            Info!
        </div>
        <div class="container-fluid">

            <div class="widget col-md-5">
                <div class="whead">
                    <h6>
                        <label id="lblHeader" title="">@ViewBag.Header</label>
                    </h6>
                    <div class="clear">
                    </div>
                </div>
                @using (Ajax.BeginForm("EditFDRENCASHMENT", "FixedDepositRegister", new AjaxOptions { HttpMethod = "POST", InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace, UpdateTargetId = "Replace", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" }, new { autocomplete = "off" }))
                {
    
                    @Html.Hidden("REFERENCE", @Model.REFERENCE)
                    @Html.Hidden("FDRNUMBER", @Model.FDRNUMBER)
                    @Html.Hidden("ENCASHMENTDATE", @Model.ENCASHMENTDATE)
                    @Html.Hidden("RECEIVEDON", @Model.RECEIVEDON)                        

    
    
                    <div class="">
                        <ul class="entryForm singleadd">

                            <li class="form-group">

                                @Html.LabelFor(model => model.GROSSINTEREST, new { @class = "control-label entrylable" })

                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.GROSSINTEREST, new { @class = "form-control decimal",@readonly="readonly", @value = @Model.GROSSINTEREST.Value.ToString("##.#0"), @placeholder = "Please Enter Your " + @Html.DisplayNameFor(model => model.GROSSINTEREST) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.GROSSINTEREST) + "'" })
                                    <div class="input-group-addon">.00</div>
                                </div>
                                <br />
                                @Html.ValidationMessageFor(model => model.GROSSINTEREST)

                            </li>
                            <li class="form-group">

                                @Html.LabelFor(model => model.SOURCETAX, new { @class = "control-label entrylable" })



                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.SOURCETAX, new { @class = "form-control decimal",@readonly="readonly", @value = @Model.SOURCETAX.Value.ToString("##.#0"), @placeholder = "Please Enter Your " + @Html.DisplayNameFor(model => model.SOURCETAX) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.SOURCETAX) + "'" })
                                    <div class="input-group-addon">.00</div>
                                </div>
                                <br />
                                @Html.ValidationMessageFor(model => model.SOURCETAX)

                            </li>
                            <li class="form-group">

                                @Html.LabelFor(model => model.EXCISEDUTY, new { @class = "control-label entrylable" })



                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.EXCISEDUTY, new { @class = "form-control decimal", @value = @Model.EXCISEDUTY.Value.ToString("##.#0"), @placeholder = "Please Enter Your " + @Html.DisplayNameFor(model => model.EXCISEDUTY) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.EXCISEDUTY) + "'" })
                                    <div class="input-group-addon">.00</div>
                                </div>
                                <br />
                                @Html.ValidationMessageFor(model => model.EXCISEDUTY)

                            </li>
                            <li class="form-group">

                                @Html.LabelFor(model => model.OTHERCHARGE, new { @class = "control-label entrylable" })



                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.OTHERCHARGE, new { @class = "form-control decimal", @value = @Model.OTHERCHARGE.Value.ToString("##.#0"), @placeholder = "Please Enter Your " + @Html.DisplayNameFor(model => model.OTHERCHARGE) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.OTHERCHARGE) + "'" })
                                    <div class="input-group-addon">.00</div>
                                </div>
                                <br />
                                @Html.ValidationMessageFor(model => model.OTHERCHARGE)

                            </li>
                            <li class="form-group">

                                @Html.LabelFor(model => model.NETINTEREST, new { @class = "control-label entrylable" })



                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.NETINTEREST, new { @class = "form-control decimal",@readonly="readonly", @value = @Model.OTHERCHARGE.Value.ToString("##.#0"), @placeholder = "Please Enter Your " + @Html.DisplayNameFor(model => model.NETINTEREST) + " (Only Numeric)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '" + @Html.DisplayNameFor(model => model.NETINTEREST) + "'" })
                                    <div class="input-group-addon">.00</div>
                                </div>
                                <br />
                                @Html.ValidationMessageFor(model => model.NETINTEREST)

                            </li>
                        </ul>
                        <button type="submit" class="btn btn-success btnSingleAddForm">Save</button>


                    </div>


                }

            </div>


        </div>
    </div>
    <p></p>


    <script type="text/javascript">
        function ShowProcessingMsg() {

            $('.loadingImage').show();

        }
        function HideProcessingMsg() {
            $('.loadingImage').hide();
        }


        function netReceivable() {
            
            var grossInterest = $('#GROSSINTEREST').val();
            var sourceTax = $('#SOURCETAX').val();
            var exciseDuty = $('#EXCISEDUTY').val();
            var otherCharge = $('#OTHERCHARGE').val();

            var netInterest = grossInterest - sourceTax - exciseDuty - otherCharge;
            //alert(netInterest);

            // alert(totalAmount);

            $('#NETINTEREST').val(netInterest.toFixed(2));

        };


    </script>

    <script>

        $(function () {
            $('.datepicker').datepicker({ dateFormat: "dd/mm/yy" });


        });

    </script>

    <script>
        $(document).on('keypress', '.number', function (event) {

            if (event.keyCode == 46 || event.keyCode == 8) {
                // let it happen, don't do anything
            } else if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }

        });
        $(document).on('keypress', '.decimal', function (event) {

            if (event.keyCode == 46 || event.keyCode == 8) {
                // let it happen, don't do anything
            } else if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }

        });

        $(document).on('keyup', '#OTHERCHARGE', netReceivable);
        $(document).on('keyup', '#EXCISEDUTY', netReceivable);


       


    </script>

</div>

