@model InvestmentManagement.Models.GridModel<InvestmentManagement.InvestmentManagement.Models.SCRIPTTRANSFER>

<div id="replace">

    <div class="contentTop">
        <span class="pageTitle">
            <span class=" glyphicon glyphicon-yen"></span>
            @Session["currentPage"]
        </span>
        <script>

            $(document).ready(function () {  //ready
                $(function () {

                    $(".datepicker").datepicker({ dateFormat: formatDate('long') });
                    //$('.datepicker').datepicker('setDate', new Date());
                });
            });
        </script>
    </div>
    <ol class="breadcrumb">
        @Html.Raw(@ViewBag.BreadCum)
    </ol>
    <div class="wrapper pl">
        <img class="loadingImage" src="~/Images/loading.gif" style="display: none;" />
        <div class="alert alert-success mt20">
            <button class="close" data-dismiss="alert" type="button">×</button>
            <strong>Info !</strong>
            @ViewBag.Message
        </div>
        <div class="container-fluid Grid-Container">



            <div class="widget mb20">
                <div class="whead">
                    <h6>@Session["currentPage"]</h6>
                    <select id="ddlPageSize">
                        <option selected="selected">15</option>
                        <option>5</option>
                        <option>50</option>
                        <option>100</option>
                        <option>200</option>
                    </select>
                    <h6 style="float: right">Select Row Count</h6>
                    <div class="clear"></div>
                </div>

                <div class="formRow dgHeaderBk">
                    <div class="container-fluid">
                      
                        <div class="row">
                            @using (Html.BeginForm("ListTradeOrder", "ScriptTransfer", FormMethod.Get))
                            {
                                                
                       
                                <div class="col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="CreatedDate" class="col-sm-4 control-label">From Date</label>
                                        <div class="col-sm-8">
                                            <input type="text" id="CreatedDate" class="form-control datepicker datePickerWidth" name="CreteadDate" placeholder="Select From Date"/>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 col-sm-4">

                                    <div class="form-group">
                                        <label for="ToDate" class="col-sm-4 control-label">To Date</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control datepicker datePickerWidth" id="ToDate" name="ToDate" placeholder="Select To Date">
                                        </div>
                                    </div>
                                </div>      
                                        
                                <div class="col-md-4 col-sm-4">

                                    <div class="form-group">                                        
                                        <div class="col-sm-8">
                                            <input type="button" id="btn" class="btn btn-primary" value="Apply" />                                           
                                        </div>
                                    </div>
                                </div>

                            }

                        </div>
                        <div class="row">
                            <div class="col-md-4 col-sm-4">
                                <div class="form-group">
                                    <div class="col-sm-8">
                                        @if (Request.RawUrl.Contains("X-Requested-With=XMLHttpRequest") || Request.AcceptTypes.Contains("*/*"))
                                        {
                                            @Ajax.ActionLink("Add", "AddScriptTransfer", "ScriptTransfer", new { Option = "TradeOrder" },
                                       new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" }, new { @class = "btn btn-success" })
                                        }
                                        else
                                        {
                                            <a class=" load btn btn-success" role="menuitem" tabindex="-1" href="~/#/ScriptTransfer/AddScriptTransfer?Option=TradeOrder">Add</a>   
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>                      
                    </div>
                </div>

                <script>
                    function ChkAddClass() {

                        var dir = $('#dir').val();
                        var col = $('#col').val().replace(/\s/g, '');
                        //alert(col);

                        var header = $('th a[href*=' + col + ']');
                        //alert(header.text());
                        var countTh = document.getElementsByTagName('th').length;


                        for (var i = 1; i <= countTh; i++) {

                            var txtTh = $('.ASPGrid tr th:nth-child(' + i + ')').text().replace(/\s/g, '');

                            if (txtTh.trim().toLowerCase() == col.toLowerCase() && dir.trim() == 'Ascending') {
                                //alert("");
                                //alert(txtTh + "" + col);
                                $(".ASPGrid tr th").addClass("sorting");

                                $('.ASPGrid tr th:nth-child(' + i + ')').addClass("ascending");


                            }

                            else if (txtTh.trim().toLowerCase() == col.toLowerCase() && dir.trim() == 'Descending') {
                                //alert(txtTh + "" + col);
                                $(".ASPGrid tr th").addClass("sorting");

                                $('.ASPGrid tr th:nth-child(' + i + ')').addClass("descending");


                            }
                        }


                        //$("select,.check :checkbox").not("#ddlPageSize").uniform();

                        //$('.selector').not("#ddlPageSize").addClass('pull-right');
                        //$('.checker').not("#ddlPageSize").addClass('dataGridCheckBox');
                    }
                </script>
                <div id="PortfolioWebGrid" class="formRow noPad btbNone tScroll">
                    @{
                        WebGrid grid = new WebGrid(rowsPerPage: Model.RowsPerPage, ajaxUpdateContainerId: "PortfolioWebGrid", ajaxUpdateCallback: "ChkAddClass", sortFieldName: "sortdefault");
                        grid.Bind(Model.DataModel, autoSortAndPage: false, rowCount: Model.RowsPerPage);
				
                        @grid.Table(columns: new[] {
              
                grid.Column(header:"Sl No",style:"textColumn", format:@<text><div>@(item.WebGrid.Rows.IndexOf(item) + 1)</div></text>),                
                grid.Column("ENTRYDATE",format:@<text>@(@item.ENTRYDATE ==null?"":string.Format("{0:dd MMM yyyy}", item.ENTRYDATE ))</text>, style:"textColumn",header:"Transaction Date"),
                
                grid.Column("ACCOUNTNUMBER",format:@<text>@item.ACCOUNTNUMBER</text>, style:"textColumn",header:"A/C Number"), 
                grid.Column("ISFORGOTTRADEORDER",format:@<text>@item.ISFORGOTTRADEORDER</text>, style:"textColumn",header:"Missing Date"),
               
                        
                                
                grid.Column("INSTRUMENT.NAME",format:@<text>@item.INSTRUMENT.NAME (@item.INSTRUMENT.SHORTNAME)</text>, style:"textColumn",header:"Instrument"),                  
                grid.Column("TRANSACTIONTYPE",format:@<text>@(item.TRANSACTIONTYPE=="R"?"Received":item.TRANSACTIONTYPE=="D"?"Delivery":item.TRANSACTIONTYPE=="B" ? "Buy Order":item.TRANSACTIONTYPE=="S" ? "Sale Order":item.TRANSACTIONTYPE=="F"?"Fraction Received":"")</text>, style:"textColumn",header:"Type"),              
                grid.Column("SHAREQTY", format:@<text>@item.SHAREQTY.ToString("N")</text>, style:"numericColumn",header:"Quantity"), 
                grid.Column("RATE", format:@<text>@item.RATE.ToString("N")</text>, style:"numericColumn",header:"Rate"),                                 
                grid.Column("TOTAL", format:@<text>@(item.TOTAL==null?"":item.TOTAL.ToString("N"))</text>, style:"numericColumn",header:"Total"),                 
                grid.Column("LOWERLIMIT",format:@<text>@item.LOWERLIMIT</text>, style:"textColumn",header:"Lower Limit"), 
                grid.Column("UPPERLIMIT",format:@<text>@item.UPPERLIMIT</text>, style:"textColumn",header:"Upper Limit"), 
                grid.Column("MAXIMUMQTY",format:@<text>@item.MAXIMUMQTY</text>, style:"textColumn",header:"Maximum Qty"), 
                grid.Column("DESCRIPTION",format:@<text>@item.DESCRIPTION</text>, style:"textColumn",header:"Fund Position"),
                grid.Column("STATUS",format:@<text>@item.STATUS</text>, style:"textColumn",header:"Status"),
               
                grid.Column(header: "",  format:@<text>
                        <div class="btn-group dropdown bdrNone">
                            <a href="#" class="tablectrl_medium bDefault" data-toggle="dropdown"><span class="iconb" data-icon=""></span></a>
                            <ul class="dropdown-menu pull-right cMbdr cMenu">
                               
                                @if(item.STATUS !="Approved")
                                {                                    
                                     <li>
                                  
                                        @if (Request.RawUrl.Contains("X-Requested-With=XMLHttpRequest") || Request.AcceptTypes.Contains("*/*"))
                                        {  
                                        @Ajax.ActionLink("Edit", "EditScriptTransfer", "ScriptTransfer",new {Ref=@item.REFERENCE,Option="TradeOrder"},
                                          new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET",OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })
                                          }
                                          else
                                          {
                                           <a class="load" role="menuitem" tabindex="-1" href="~/#/ScriptTransfer/EditScriptTransfer?Ref=@item.REFERENCE&Option=TradeOrder">Edit</a>
                                          }                                          
                                     </li>
                                   
                                  <li>
                                      @if (Request.RawUrl.Contains("X-Requested-With=XMLHttpRequest") || Request.AcceptTypes.Contains("*/*"))
                                    {  
                                        @Ajax.ActionLink("Approve", "Approve", "ScriptTransfer",new {Ref=@item.REFERENCE,Option="TradeOrder"},
                                          new AjaxOptions() { UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace, HttpMethod = "GET",OnBegin = "ShowProcessingMsg", OnSuccess = "HideProcessingMsg" })
                                          }
                                          else
                                          {
                                           <a class="load" role="menuitem" tabindex="-1" href="~/#/ScriptTransfer/Approve?Ref=@item.REFERENCE&Option=TradeOrder">Approve</a>
                                          }
                                  </li>
                                }

                               <li>
                                <a class="load" role="menuitem" tabindex="-1" href="~/#/ScriptTransfer/EditTradeOrder?Ref=@item.REFERENCE">Edit Type</a>
                               </li>
                            </ul>
                        </div>
                        </text>)
                },



                tableStyle: "ASPGrid",
                htmlAttributes: new { cellspacing = "0", border = "0" },


              footer: @<ul class="pagination">
                  
                <li class="@ViewBag.Prev"><a  class="@ViewBag.PrevNotActive" href="/ScriptTransfer/ListTradeOrder?PagingType=Prev&sort=@grid.SortColumn&currentFilter=@ViewBag.CurrentFilter&currentRowPerPage=@ViewBag.currentRowPerPage&CreatedDate=@ViewBag.CreatedDate&ToDate=@ViewBag.ToDate" data-swhglnk="true">Prev</a></li>                 
                <li class="@ViewBag.Next"><a  class="@ViewBag.NextNotActive" href="/ScriptTransfer/ListTradeOrder?PagingType=Next&sort=@grid.SortColumn&currentFilter=@ViewBag.CurrentFilter&currentRowPerPage=@ViewBag.currentRowPerPage&CreatedDate=@ViewBag.CreatedDate&ToDate=@ViewBag.ToDate" data-swhglnk="true">Next</a></li>  
                
              </ul>

                );
                        @Html.Hidden("dir", grid.SortDirection)
                        @Html.Hidden("col", grid.SortColumn)
                    }
                </div>


            </div>
            <div class="clear"></div>



        </div>

    </div>



<script type="text/javascript">
    $(document).ready(function () {
        $(".ASPGrid tr th").addClass("sorting");

        $('.not-active').bind('click', false);

        //$('#btn').on('click', function () {
        //    $('.loadingImage').show();

        //    var filterstring = $('#CreatedDate').val();
        //    var ToDate = $('#ToDate').val();

        //    if (filterstring == '' || ToDate == '') {
        //        alert('From Date and To Date is Required');
        //        $('.loadingImage').hide();
        //        return false;
        //    }

        //    $.get("/ScriptTransfer/ListTradeOrder?CreatedDate=" + $('#CreatedDate').val() + "&rows=" + $("#ddlPageSize").val() + "&ToDate=" + $('#ToDate').val() + "&TRANSACTIONTYPE=" + $("#TRANSACTIONTYPE").val() + "", function (data) {
        //        var getHTML = $(data);
        //        $('#PortfolioWebGrid').empty();

        //        $('#PortfolioWebGrid').html($('#PortfolioWebGrid', getHTML));
        //        ChkAddClass();
        //        $('.loadingImage').hide();
        //    });
        //});


    });

 </script>


<script>

    var RemoveJQUIDatepicker = function () {
        $(".datePicker").datepicker("destroy");
        $(".datePicker").removeClass("hasDatePicker");
        $(".datePicker").removeAttr("Disabled");

        console.log('destroy');
    };

    var SetJQUIDatePicker = function () {
        $(".datepicker").datepicker({ dateFormat: formatDate('long') });    
        jQuery.datepicker.dpDiv.appendTo(jQuery('body'));
        console.log('Set');
    }

    $('#btn').on('click', function () {
        $('.loadingImage').show();

        var filterstring = $('#CreatedDate').val();
        var ToDate = $('#ToDate').val();

        console.log(filterstring+''+ToDate);

        if (filterstring == '' || ToDate == '') {
            alert('From Date and To Date is Required.'+filterstring+''+ToDate);
            $('.loadingImage').hide();
            return false;
        }

        //Destroy datepicker
        RemoveJQUIDatepicker();

        $.get("/ScriptTransfer/ListTradeOrder?CreatedDate=" + $('#CreatedDate').val() + "&rows=" + $("#ddlPageSize").val() + "&ToDate=" + $('#ToDate').val() + "&TRANSACTIONTYPE=" + $("#TRANSACTIONTYPE").val() + "", function (data) {
            var getHTML = $(data);
            $('#PortfolioWebGrid').empty();
            $('#PortfolioWebGrid').html($('#PortfolioWebGrid', getHTML));          
            ChkAddClass();
            $('.loadingImage').hide();
        });
             
        SetJQUIDatePicker();
    });


    $(document).on('keypress', '.number', function (event) {

        if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9) {
            // let it happen, don't do anything
        } else if ((event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }

    });
    $(document).on('keypress', '.decimal', function (event) {

        if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9) {
            // let it happen, don't do anything
        } else if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }

    });


</script>

<script type="text/javascript">
    function ShowProcessingMsg() {

        $('.loadingImage').show();

    }
    function HideProcessingMsg() {
        $('.loadingImage').hide();
    }

</script>

<script>

    $(document).on(function () {  //Ready
        $(function () {

            $("#txtCode").datepicker({ dateFormat: 'dd-M-yy', });
            //$('#txtCode').datepicker('setDate', new Date());

        });

    });
</script>


</div>

